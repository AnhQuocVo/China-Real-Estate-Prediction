{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":111876,"databundleVersionId":13320609,"sourceType":"competition"}],"dockerImageVersionId":31153,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false},"colab":{"name":"Real Estate Demand Prediction","provenance":[]},"widgets":{"application/vnd.jupyter.widget-state+json":{"837ddd17e011465c9c70fe6f684b6710":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"VBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"VBoxView","box_style":"","children":["IPY_MODEL_71324ac1a72547319876a683b621707d","IPY_MODEL_f9d71883ab0f4d29817cd21cc9be2261","IPY_MODEL_b58a202b54ee40118663f85ed70f16a3","IPY_MODEL_6691333d75da41e9acff2cd8f016be6e","IPY_MODEL_d3143cf02ee447259a49a92b954556e3"],"layout":"IPY_MODEL_9df1bc617a9e455081be052e95f02cf2"}},"71324ac1a72547319876a683b621707d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_fb79dd1be672485fbf4b4d3c51f94dc7","placeholder":"​","style":"IPY_MODEL_5a9c340cc2d8467ab6255f8dd94c3a33","value":"<center> <img\nsrc=https://www.kaggle.com/static/images/site-logo.png\nalt='Kaggle'> <br> Create an API token from <a\nhref=\"https://www.kaggle.com/settings/account\" target=\"_blank\">your Kaggle\nsettings page</a> and paste it below along with your Kaggle username. <br> </center>"}},"f9d71883ab0f4d29817cd21cc9be2261":{"model_module":"@jupyter-widgets/controls","model_name":"TextModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"TextModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"TextView","continuous_update":true,"description":"Username:","description_tooltip":null,"disabled":false,"layout":"IPY_MODEL_ad481d1ca1634344907344a304f4721f","placeholder":"​","style":"IPY_MODEL_7f7e570ca81f477ab2e794cfb1e88c9b","value":""}},"b58a202b54ee40118663f85ed70f16a3":{"model_module":"@jupyter-widgets/controls","model_name":"PasswordModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"PasswordModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"PasswordView","continuous_update":true,"description":"Token:","description_tooltip":null,"disabled":false,"layout":"IPY_MODEL_ff9e5d867659412abe4e6f1314eaa351","placeholder":"​","style":"IPY_MODEL_39c6134c8cda4b38b8b0a0216faf4643","value":""}},"6691333d75da41e9acff2cd8f016be6e":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ButtonView","button_style":"","description":"Login","disabled":false,"icon":"","layout":"IPY_MODEL_ee0f0b64ce7342638a0609f5d0e9154d","style":"IPY_MODEL_cad94ae80d8b402cb8bef7c78d88519c","tooltip":""}},"d3143cf02ee447259a49a92b954556e3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_123e59128a6646d1a15b4457b7385559","placeholder":"​","style":"IPY_MODEL_7ec1e7e35922417ca118b18888019611","value":"\n<b>Thank You</b></center>"}},"9df1bc617a9e455081be052e95f02cf2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":"center","align_self":null,"border":null,"bottom":null,"display":"flex","flex":null,"flex_flow":"column","grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"50%"}},"fb79dd1be672485fbf4b4d3c51f94dc7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5a9c340cc2d8467ab6255f8dd94c3a33":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ad481d1ca1634344907344a304f4721f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7f7e570ca81f477ab2e794cfb1e88c9b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ff9e5d867659412abe4e6f1314eaa351":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"39c6134c8cda4b38b8b0a0216faf4643":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ee0f0b64ce7342638a0609f5d0e9154d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cad94ae80d8b402cb8bef7c78d88519c":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","button_color":null,"font_weight":""}},"123e59128a6646d1a15b4457b7385559":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7ec1e7e35922417ca118b18888019611":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"## 1. IMPORTS & CONFIGURATION","metadata":{"id":"Ry7rYCCV_9-F"}},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\"\n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-10-08T12:06:23.834863Z","iopub.status.idle":"2025-10-08T12:06:23.835335Z","shell.execute_reply.started":"2025-10-08T12:06:23.835107Z","shell.execute_reply":"2025-10-08T12:06:23.835126Z"},"id":"xylhSr2Y_9-G"},"outputs":[],"execution_count":null},{"cell_type":"code","source":"!pip install catboost","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-08T12:06:23.837402Z","iopub.status.idle":"2025-10-08T12:06:23.838172Z","shell.execute_reply.started":"2025-10-08T12:06:23.837749Z","shell.execute_reply":"2025-10-08T12:06:23.837776Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import warnings\nwarnings.filterwarnings('ignore')\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import datetime\nimport gc\n\n# ML Libraries\nfrom sklearn.model_selection import TimeSeriesSplit\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder\nfrom sklearn.metrics import mean_absolute_percentage_error, r2_score, mean_squared_error\nfrom sklearn.ensemble import RandomForestRegressor\nimport lightgbm as lgb\nimport xgboost as xgb\nfrom catboost import CatBoostRegressor\n\n# Hyperparameter Optimization\ntry:\n    import optuna\n    OPTUNA_AVAILABLE = True\nexcept ImportError:\n    OPTUNA_AVAILABLE = False\n    print(\"Optuna not available. Using default hyperparameters.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-08T12:06:23.840230Z","iopub.status.idle":"2025-10-08T12:06:23.840728Z","shell.execute_reply.started":"2025-10-08T12:06:23.840496Z","shell.execute_reply":"2025-10-08T12:06:23.840517Z"},"colab":{"base_uri":"https://localhost:8080/"},"id":"LdTmzbG3_9-H","outputId":"02e9a16b-de55-44a5-b5b7-acd6450ca94f"},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Configuration\nRANDOM_SEED = 42\nnp.random.seed(RANDOM_SEED)\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', 100)\n\n# Plotting style\nplt.style.use('seaborn-v0_8-darkgrid')\nsns.set_palette(\"husl\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-08T12:06:23.842323Z","iopub.status.idle":"2025-10-08T12:06:23.843124Z","shell.execute_reply.started":"2025-10-08T12:06:23.842808Z","shell.execute_reply":"2025-10-08T12:06:23.842835Z"},"id":"XyG4YsQA_9-H"},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 2. DATA LOADING & OVERVIEW","metadata":{"id":"vQnJ-rtS_9-H"}},{"cell_type":"code","source":"def load_data():\n    # Training data\n    new_house = pd.read_csv('/kaggle/input/china-real-estate-demand-prediction/train/new_house_transactions.csv')\n    new_house_nearby = pd.read_csv('/kaggle/input/china-real-estate-demand-prediction/train/new_house_transactions_nearby_sectors.csv')\n    preowned_house = pd.read_csv('/kaggle/input/china-real-estate-demand-prediction/train/pre_owned_house_transactions.csv')\n    preowned_nearby = pd.read_csv('/kaggle/input/china-real-estate-demand-prediction/train/pre_owned_house_transactions_nearby_sectors.csv')\n    land_trans = pd.read_csv('/kaggle/input/china-real-estate-demand-prediction/train/land_transactions.csv')\n    land_nearby = pd.read_csv('/kaggle/input/china-real-estate-demand-prediction/train/land_transactions_nearby_sectors.csv')\n    sector_poi = pd.read_csv('/kaggle/input/china-real-estate-demand-prediction/train/sector_POI.csv')\n    city_search = pd.read_csv('/kaggle/input/china-real-estate-demand-prediction/train/city_search_index.csv')\n    city_indexes = pd.read_csv('/kaggle/input/china-real-estate-demand-prediction/train/city_indexes.csv')\n\n    # Test data\n    test = pd.read_csv('/kaggle/input/china-real-estate-demand-prediction/test.csv')\n    sample_submission = pd.read_csv('/kaggle/input/china-real-estate-demand-prediction/sample_submission.csv')\n\n    print(\"✓ All datasets loaded successfully!\")\n\n    datasets = {\n        'new_house': new_house,\n        'new_house_nearby': new_house_nearby,\n        'preowned_house': preowned_house,\n        'preowned_nearby': preowned_nearby,\n        'land_trans': land_trans,\n        'land_nearby': land_nearby,\n        'sector_poi': sector_poi,\n        'city_search': city_search,\n        'city_indexes': city_indexes,\n        'test': test,\n        'sample_submission': sample_submission\n    }\n\n    return datasets\n\ndef data_overview(datasets):\n    for name, df in datasets.items():\n        if name != 'sample_submission':\n            print(f\"\\n{name.upper()}:\")\n            print(f\"  Shape: {df.shape}\")\n            print(f\"  Columns: {list(df.columns)}\")\n            print(f\"  Missing values: {df.isnull().sum().sum()}\")\n            print(f\"  Memory usage: {df.memory_usage(deep=True).sum() / 1024**2:.2f} MB\")\n\n# Load data\ndata = load_data()\ndata_overview(data)","metadata":{"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"SjB0V5z1_9-I","outputId":"4aa7245a-785b-4b72-8159-ce7fab1a9044","execution":{"iopub.status.busy":"2025-10-08T12:06:23.844427Z","iopub.status.idle":"2025-10-08T12:06:23.844888Z","shell.execute_reply.started":"2025-10-08T12:06:23.844669Z","shell.execute_reply":"2025-10-08T12:06:23.844687Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 3. EXPLORATORY DATA ANALYSIS (EDA)","metadata":{"id":"SKmyu-AR_9-I"}},{"cell_type":"code","source":"def parse_month_sector(df):\n    df = df.copy()\n    df['month'] = df['month_sector'].str.extract(r'(\\d{4}\\s+\\w+)')[0]\n    df['sector'] = df['month_sector'].str.extract(r'sector\\s+(\\d+)')[0].astype(int)\n    df['month'] = pd.to_datetime(df['month'], format='%Y %b')\n    return df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-08T12:06:23.846742Z","iopub.status.idle":"2025-10-08T12:06:23.847233Z","shell.execute_reply.started":"2025-10-08T12:06:23.847019Z","shell.execute_reply":"2025-10-08T12:06:23.847039Z"},"id":"dTvNDjbM_9-I"},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def eda_analysis(data):\n    # Parse target data - new_house already has 'month' and 'sector' columns\n    new_house = data['new_house'].copy()\n    new_house['month'] = pd.to_datetime(new_house['month'], format='%Y-%b')\n\n\n    print(\"\\n1. TARGET VARIABLE ANALYSIS\")\n    print(\"-\" * 80)\n    target = 'amount_new_house_transactions'\n    print(f\"\\nTarget: {target}\")\n    print(new_house[target].describe())\n\n    # Time series plot\n    fig, axes = plt.subplots(2, 2, figsize=(16, 10))\n\n    # Overall trend\n    monthly_avg = new_house.groupby('month')[target].mean()\n    axes[0, 0].plot(monthly_avg.index, monthly_avg.values, marker='o', linewidth=2)\n    axes[0, 0].set_title('Average New House Transactions Over Time', fontsize=14, fontweight='bold')\n    axes[0, 0].set_xlabel('Month')\n    axes[0, 0].set_ylabel('Average Transaction Amount')\n    axes[0, 0].grid(True, alpha=0.3)\n    axes[0, 0].tick_params(axis='x', rotation=45)\n\n    # Distribution\n    axes[0, 1].hist(new_house[target], bins=50, edgecolor='black', alpha=0.7)\n    axes[0, 1].set_title('Distribution of Transaction Amounts', fontsize=14, fontweight='bold')\n    axes[0, 1].set_xlabel('Transaction Amount')\n    axes[0, 1].set_ylabel('Frequency')\n    axes[0, 1].grid(True, alpha=0.3)\n\n    # Top sectors\n    sector_avg = new_house.groupby('sector')[target].mean().sort_values(ascending=False).head(10)\n    axes[1, 0].barh(sector_avg.index.astype(str), sector_avg.values, color='teal')\n    axes[1, 0].set_title('Top 10 Sectors by Average Transaction', fontsize=14, fontweight='bold')\n    axes[1, 0].set_xlabel('Average Transaction Amount')\n    axes[1, 0].set_ylabel('Sector')\n    axes[1, 0].grid(True, alpha=0.3, axis='x')\n\n    # Box plot by year\n    new_house['year'] = new_house['month'].dt.year\n    axes[1, 1].boxplot([new_house[new_house['year'] == y][target].dropna()\n                        for y in sorted(new_house['year'].unique())],\n                       labels=sorted(new_house['year'].unique()))\n    axes[1, 1].set_title('Transaction Amount Distribution by Year', fontsize=14, fontweight='bold')\n    axes[1, 1].set_xlabel('Year')\n    axes[1, 1].set_ylabel('Transaction Amount')\n    axes[1, 1].grid(True, alpha=0.3, axis='y')\n\n\n    plt.tight_layout()\n    plt.savefig('eda_overview.png', dpi=300, bbox_inches='tight')\n    print(\"\\n✓ EDA plots saved as 'eda_overview.png'\")\n\n    print(\"\\n2. KEY INSIGHTS\")\n    print(\"-\" * 80)\n    print(f\"  • Total unique sectors: {new_house['sector'].nunique()}\")\n    print(f\"  • Date range: {new_house['month'].min()} to {new_house['month'].max()}\")\n    print(f\"  • Average transaction amount: {new_house[target].mean():.2f}\")\n    print(f\"  • Transaction amount std: {new_house[target].std():.2f}\")\n    print(f\"  • Coefficient of Variation: {(new_house[target].std() / new_house[target].mean()):.2%}\")\n\n\n# Run EDA\neda_analysis(data)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-08T12:06:24.028786Z","iopub.execute_input":"2025-10-08T12:06:24.029229Z","iopub.status.idle":"2025-10-08T12:06:27.382141Z","shell.execute_reply.started":"2025-10-08T12:06:24.029197Z","shell.execute_reply":"2025-10-08T12:06:27.377083Z"},"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"jednZVjr_9-J","outputId":"146a50b2-a7b9-4e4f-ebb0-016cc6edbdad"},"outputs":[{"name":"stdout","text":"\n1. TARGET VARIABLE ANALYSIS\n--------------------------------------------------------------------------------\n\nTarget: amount_new_house_transactions\ncount      5433.000000\nmean      32587.559558\nstd       49047.627905\nmin          50.950000\n25%        5200.170000\n50%       16040.320000\n75%       38499.900000\nmax      606407.640000\nName: amount_new_house_transactions, dtype: float64\n\n✓ EDA plots saved as 'eda_overview.png'\n\n2. KEY INSIGHTS\n--------------------------------------------------------------------------------\n  • Total unique sectors: 95\n  • Date range: 2019-01-01 00:00:00 to 2024-07-01 00:00:00\n  • Average transaction amount: 32587.56\n  • Transaction amount std: 49047.63\n  • Coefficient of Variation: 150.51%\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1600x1000 with 4 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":28},{"cell_type":"markdown","source":"## 4. FEATURE ENGINEERING","metadata":{"id":"NSyfFp-H_9-J"}},{"cell_type":"code","source":"def engineer_features(data):\n    \"\"\"Comprehensive feature engineering pipeline\"\"\"\n\n    print(\"\\nEngineering features...\")\n\n    # Use provided dataframes directly, convert month to datetime where needed\n    new_house = data['new_house'].copy()\n    preowned = data['preowned_house'].copy()\n    land = data['land_trans'].copy()\n    test_df = data['test'].copy()\n\n    new_house['month'] = pd.to_datetime(new_house['month'], format='%Y-%b')\n    preowned['month'] = pd.to_datetime(preowned['month'], format='%Y-%b')\n    land['month'] = pd.to_datetime(land['month'], format='%Y-%b')\n    # Test data month is in format 'YYYY Mon' as seen in sample_submission\n    # Extract the date part (e.g., \"2024 Aug\") from the 'id' column\n    date_part = test_df['id'].str.extract(r'(\\d{4}\\s+[A-Za-z]{3})')[0]\n    test_df['month'] = pd.to_datetime(date_part, format='%Y %b')\n    test_df['sector'] = test_df['id'].str.extract(r'sector\\s+(\\d+)')[0].astype(int)\n\n\n    # Combine train and test for consistent feature engineering\n    new_house['is_train'] = 1\n    test_df['is_train'] = 0\n    # Correct target column name for test set\n    test_df['amount_new_house_transactions'] = np.nan\n\n\n    combined = pd.concat([new_house, test_df], axis=0, ignore_index=True)\n    combined = combined.sort_values(['sector', 'month']).reset_index(drop=True)\n\n    print(f\"  Combined dataset shape: {combined.shape}\")\n\n    # 1. Date Features\n    print(\"  • Creating date features...\")\n    combined['year'] = combined['month'].dt.year\n    combined['month_num'] = combined['month'].dt.month\n    combined['quarter'] = combined['month'].dt.quarter\n    combined['month_sin'] = np.sin(2 * np.pi * combined['month_num'] / 12)\n    combined['month_cos'] = np.cos(2 * np.pi * combined['month_num'] / 12)\n    combined['days_in_month'] = combined['month'].dt.days_in_month\n\n    # Month index (sequential counter)\n    combined['month_index'] = (combined['year'] - combined['year'].min()) * 12 + combined['month_num']\n\n    # 2. Lag Features\n    print(\"  • Creating lag features...\")\n    lag_periods = [1, 2, 3, 6, 12]\n\n    for lag in lag_periods:\n        combined[f'lag_{lag}'] = combined.groupby('sector')['amount_new_house_transactions'].shift(lag)\n\n    # 3. Rolling Statistics\n    print(\"  • Creating rolling statistics...\")\n    for window in [3, 6, 12]:\n        combined[f'rolling_mean_{window}'] = combined.groupby('sector')['amount_new_house_transactions'].transform(\n            lambda x: x.shift(1).rolling(window=window, min_periods=1).mean()\n        )\n        combined[f'rolling_std_{window}'] = combined.groupby('sector')['amount_new_house_transactions'].transform(\n            lambda x: x.shift(1).rolling(window=window, min_periods=1).std()\n        )\n\n    # 4. Expanding Statistics (cumulative)\n    print(\"  • Creating expanding statistics...\")\n    combined['expanding_mean'] = combined.groupby('sector')['amount_new_house_transactions'].transform(\n        lambda x: x.shift(1).expanding(min_periods=1).mean()\n    )\n    combined['expanding_std'] = combined.groupby('sector')['amount_new_house_transactions'].transform(\n        lambda x: x.shift(1).expanding(min_periods=1).std()\n    )\n\n    # 5. Trend Features\n    print(\"  • Creating trend features...\")\n    combined['diff_1'] = combined.groupby('sector')['amount_new_house_transactions'].diff(1)\n    combined['diff_12'] = combined.groupby('sector')['amount_new_house_transactions'].diff(12)\n    combined['pct_change_1'] = combined.groupby('sector')['amount_new_house_transactions'].pct_change(1)\n\n    # 6. Merge Pre-owned House Data\n    print(\"  • Merging pre-owned house data...\")\n    preowned_agg = preowned.groupby(['month', 'sector']).agg({\n        'amount_pre_owned_house_transactions': ['mean', 'sum', 'count'],\n        'price_pre_owned_house_transactions': ['mean', 'std']\n    }).reset_index()\n    preowned_agg.columns = ['month', 'sector', 'preowned_amount_mean', 'preowned_amount_sum',\n                            'preowned_count', 'preowned_price_mean', 'preowned_price_std']\n\n    combined = combined.merge(preowned_agg, on=['month', 'sector'], how='left')\n\n    # 7. Merge Land Transaction Data\n    print(\"  • Merging land transaction data...\")\n    land_agg = land.groupby(['month', 'sector']).agg({\n        'transaction_amount': ['mean', 'sum', 'count', 'std']\n    }).reset_index()\n    land_agg.columns = ['month', 'sector', 'land_amount_mean', 'land_amount_sum',\n                        'land_count', 'land_amount_std']\n\n\n    combined = combined.merge(land_agg, on=['month', 'sector'], how='left')\n\n    # 8. Create Ratio Features\n    print(\"  • Creating ratio features...\")\n    combined['new_to_preowned_ratio'] = combined['lag_1'] / (combined['preowned_amount_mean'].fillna(0) + 1) # Fillna 0 to avoid division by zero\n    combined['land_to_new_ratio'] = combined['land_amount_mean'].fillna(0) / (combined['lag_1'].fillna(0) + 1) # Fillna 0 to avoid division by zero\n\n    # 9. Merge Sector POI Data\n    print(\"  • Merging sector POI data...\")\n    sector_poi = data['sector_poi']\n    if 'sector' in sector_poi.columns:\n        poi_features = sector_poi.copy()\n        combined = combined.merge(poi_features, on='sector', how='left')\n\n    # 10. Merge City-level Data\n    print(\"  • Merging city-level data...\")\n    # Note: Assumes city can be mapped from sector or is in the data\n    # This is a placeholder - adjust based on actual data structure\n\n    # 11. Target Encoding for Sector\n    print(\"  • Creating target encoding...\")\n    sector_mean = combined[combined['is_train'] == 1].groupby('sector')['amount_new_house_transactions'].mean()\n    combined['sector_target_mean'] = combined['sector'].map(sector_mean)\n\n    # 12. Sector Statistics\n    sector_stats = combined[combined['is_train'] == 1].groupby('sector')['amount_new_house_transactions'].agg([\n        'mean', 'std', 'min', 'max', 'count'\n    ]).reset_index()\n    sector_stats.columns = ['sector', 'sector_mean', 'sector_std', 'sector_min', 'sector_max', 'sector_count']\n    combined = combined.merge(sector_stats, on='sector', how='left')\n\n\n    print(f\"\\n✓ Feature engineering complete! Final shape: {combined.shape}\")\n    print(f\"  Total features: {combined.shape[1]}\")\n\n\n    return combined\n\n# Engineer features\ndf_features = engineer_features(data)","metadata":{"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"OABz0qBK_9-J","outputId":"7deff781-7005-4110-bb3e-ed6d3fc29fb1","execution":{"iopub.status.busy":"2025-10-08T12:06:27.385246Z","iopub.execute_input":"2025-10-08T12:06:27.386062Z","iopub.status.idle":"2025-10-08T12:06:28.343624Z","shell.execute_reply.started":"2025-10-08T12:06:27.386019Z","shell.execute_reply":"2025-10-08T12:06:28.341520Z"}},"outputs":[{"name":"stdout","text":"\nEngineering features...\n  Combined dataset shape: (6585, 14)\n  • Creating date features...\n  • Creating lag features...\n  • Creating rolling statistics...\n  • Creating expanding statistics...\n  • Creating trend features...\n  • Merging pre-owned house data...\n  • Merging land transaction data...\n  • Creating ratio features...\n  • Merging sector POI data...\n  • Merging city-level data...\n  • Creating target encoding...\n\n✓ Feature engineering complete! Final shape: (6585, 195)\n  Total features: 195\n","output_type":"stream"}],"execution_count":29},{"cell_type":"code","source":"def preprocess_data(df):\n    \"\"\"Preprocess and split data\"\"\"\n\n    print(\"\\nPreprocessing data...\")\n\n    # Split back to train and test\n    train = df[df['is_train'] == 1].copy()\n    test = df[df['is_train'] == 0].copy()\n\n    print(f\"  Train shape: {train.shape}\")\n    print(f\"  Test shape: {test.shape}\")\n\n    # Define feature columns (exclude target, identifiers, and datetime)\n    # Exclude 'id' and 'month_sector' if they exist, 'month', target, and 'is_train'\n    exclude_cols = ['id', 'month_sector', 'month', 'amount_new_house_transactions', 'is_train']\n    feature_cols = [col for col in train.columns if col not in exclude_cols]\n\n    print(f\"\\n  Total feature columns: {len(feature_cols)}\")\n\n    # Handle missing values\n    print(\"\\n  Handling missing values...\")\n\n    # For numeric columns, fill with median\n    numeric_cols = train[feature_cols].select_dtypes(include=[np.number]).columns\n    for col in numeric_cols:\n        median_val = train[col].median()\n        train[col].fillna(median_val, inplace=True)\n        test[col].fillna(median_val, inplace=True)\n\n    # Identify categorical columns (object type) after numerical imputation\n    categorical_cols = train[feature_cols].select_dtypes(include=['object']).columns.tolist()\n\n    # Label encode all categorical columns\n    print(\"  • Label encoding categorical columns...\")\n    for col in categorical_cols:\n        le = LabelEncoder()\n        # Fit on combined train and test data to handle unseen labels in test\n        combined_series = pd.concat([train[col].astype(str), test[col].astype(str)], axis=0).unique()\n        le.fit(combined_series)\n        train[col] = le.transform(train[col].astype(str))\n        test[col] = le.transform(test[col].astype(str))\n\n\n    print(f\"  Missing values in train: {train[feature_cols].isnull().sum().sum()}\")\n    print(f\"  Missing values in test: {test[feature_cols].isnull().sum().sum()}\")\n\n    # Create time-based validation split (last 6 months for validation)\n    train = train.sort_values('month')\n    split_date = train['month'].max() - pd.DateOffset(months=6)\n\n    train_data = train[train['month'] < split_date]\n    val_data = train[train['month'] >= split_date]\n\n    X_train = train_data[feature_cols]\n    y_train = train_data['amount_new_house_transactions']\n\n    X_val = val_data[feature_cols]\n    y_val = val_data['amount_new_house_transactions']\n\n    X_test = test[feature_cols]\n\n    print(f\"\\n  Time-based split:\")\n    print(f\"    Training: {X_train.shape[0]} samples (before {split_date.strftime('%Y-%m')})\")\n    print(f\"    Validation: {X_val.shape[0]} samples (from {split_date.strftime('%Y-%m')})\")\n    print(f\"    Test: {X_test.shape[0]} samples\")\n\n    return X_train, y_train, X_val, y_val, X_test, test, feature_cols\n\n# Preprocess data\nX_train, y_train, X_val, y_val, X_test, test_df, features = preprocess_data(df_features)","metadata":{"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"NnhCvYum_9-K","outputId":"57275e64-e65e-4a80-f1a7-d4078f8db40f","execution":{"iopub.status.busy":"2025-10-08T12:06:28.345079Z","iopub.execute_input":"2025-10-08T12:06:28.345575Z","iopub.status.idle":"2025-10-08T12:06:28.554382Z","shell.execute_reply.started":"2025-10-08T12:06:28.345541Z","shell.execute_reply":"2025-10-08T12:06:28.552690Z"}},"outputs":[{"name":"stdout","text":"\nPreprocessing data...\n  Train shape: (5433, 195)\n  Test shape: (1152, 195)\n\n  Total feature columns: 191\n\n  Handling missing values...\n  • Label encoding categorical columns...\n  Missing values in train: 16299\n  Missing values in test: 3456\n\n  Time-based split:\n    Training: 4852 samples (before 2024-01)\n    Validation: 581 samples (from 2024-01)\n    Test: 1152 samples\n","output_type":"stream"}],"execution_count":30},{"cell_type":"markdown","source":"## 6. MODEL DEVELOPMENT","metadata":{"id":"KiLhhWfd_9-K"}},{"cell_type":"code","source":"def custom_mape(y_true, y_pred):\n    \"\"\"Calculate MAPE (Mean Absolute Percentage Error)\"\"\"\n    mask = y_true != 0\n    return np.mean(np.abs((y_true[mask] - y_pred[mask]) / y_true[mask])) * 100\n\ndef train_lightgbm(X_train, y_train, X_val, y_val):\n    \"\"\"Train LightGBM model\"\"\"\n    print(\"\\n1. Training LightGBM...\")\n\n    params = {\n        'objective': 'regression',\n        'metric': 'mape',\n        'boosting_type': 'gbdt',\n        'num_leaves': 31,\n        'learning_rate': 0.05,\n        'feature_fraction': 0.8,\n        'bagging_fraction': 0.8,\n        'bagging_freq': 5,\n        'verbose': -1,\n        'random_state': RANDOM_SEED\n    }\n\n    train_data = lgb.Dataset(X_train, label=y_train)\n    val_data = lgb.Dataset(X_val, label=y_val, reference=train_data)\n\n    model = lgb.train(\n        params,\n        train_data,\n        num_boost_round=1000,\n        valid_sets=[train_data, val_data],\n        valid_names=['train', 'valid'],\n        callbacks=[lgb.early_stopping(stopping_rounds=50), lgb.log_evaluation(100)]\n    )\n\n    return model\n\ndef train_xgboost(X_train, y_train, X_val, y_val):\n    \"\"\"Train XGBoost model\"\"\"\n    print(\"\\n2. Training XGBoost...\")\n\n    params = {\n        'objective': 'reg:squarederror',\n        'eval_metric': 'mape',\n        'max_depth': 6,\n        'learning_rate': 0.05,\n        'subsample': 0.8,\n        'colsample_bytree': 0.8,\n        'random_state': RANDOM_SEED\n    }\n\n    dtrain = xgb.DMatrix(X_train, label=y_train)\n    dval = xgb.DMatrix(X_val, label=y_val)\n\n    model = xgb.train(\n        params,\n        dtrain,\n        num_boost_round=1000,\n        evals=[(dtrain, 'train'), (dval, 'valid')],\n        early_stopping_rounds=50,\n        verbose_eval=100\n    )\n\n    return model\n\ndef train_catboost(X_train, y_train, X_val, y_val):\n    \"\"\"Train CatBoost model\"\"\"\n    print(\"\\n3. Training CatBoost...\")\n\n    model = CatBoostRegressor(\n        iterations=1000,\n        learning_rate=0.05,\n        depth=6,\n        loss_function='MAPE',\n        random_seed=RANDOM_SEED,\n        verbose=100,\n        early_stopping_rounds=50\n    )\n\n    model.fit(\n        X_train, y_train,\n        eval_set=(X_val, y_val),\n        use_best_model=True\n    )\n\n    return model\n\n# Train models\nmodels = {}\nmodels['lgb'] = train_lightgbm(X_train, y_train, X_val, y_val)\nmodels['xgb'] = train_xgboost(X_train, y_train, X_val, y_val)\nmodels['catboost'] = train_catboost(X_train, y_train, X_val, y_val)","metadata":{"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"aeZDd066_9-K","outputId":"1521b8c8-512b-4e08-8054-665c914be6a9","execution":{"iopub.status.busy":"2025-10-08T12:06:28.557778Z","iopub.execute_input":"2025-10-08T12:06:28.558925Z","iopub.status.idle":"2025-10-08T12:06:43.497873Z","shell.execute_reply.started":"2025-10-08T12:06:28.558893Z","shell.execute_reply":"2025-10-08T12:06:43.496346Z"}},"outputs":[{"name":"stdout","text":"\n1. Training LightGBM...\nTraining until validation scores don't improve for 50 rounds\n[100]\ttrain's mape: 0.174408\tvalid's mape: 0.18278\n[200]\ttrain's mape: 0.104641\tvalid's mape: 0.119846\nEarly stopping, best iteration is:\n[164]\ttrain's mape: 0.109838\tvalid's mape: 0.118306\n\n2. Training XGBoost...\n[0]\ttrain-mape:10.01600\tvalid-mape:11.95129\n[100]\ttrain-mape:0.15223\tvalid-mape:0.15539\n[186]\ttrain-mape:0.10854\tvalid-mape:0.11461\n\n3. Training CatBoost...\n0:\tlearn: 0.8994446\ttest: 0.9171332\tbest: 0.9171332 (0)\ttotal: 72.8ms\tremaining: 1m 12s\n100:\tlearn: 0.6791597\ttest: 0.6600976\tbest: 0.6600976 (100)\ttotal: 1.3s\tremaining: 11.6s\n200:\tlearn: 0.6396498\ttest: 0.6136208\tbest: 0.6136208 (200)\ttotal: 2.51s\tremaining: 9.96s\n300:\tlearn: 0.6358002\ttest: 0.6093611\tbest: 0.6093611 (300)\ttotal: 3.81s\tremaining: 8.84s\n400:\tlearn: 0.6325664\ttest: 0.6074394\tbest: 0.6072229 (383)\ttotal: 5.16s\tremaining: 7.71s\nStopped by overfitting detector  (50 iterations wait)\n\nbestTest = 0.6072228774\nbestIteration = 383\n\nShrink model to first 384 iterations.\n","output_type":"stream"}],"execution_count":31},{"cell_type":"markdown","source":"## 7. MODEL EVALUATION","metadata":{"id":"hM2O5lSR_9-K"}},{"cell_type":"code","source":"def evaluate_models(models, X_val, y_val):\n    \"\"\"Evaluate all models\"\"\"\n\n    results = {}\n    predictions = {}\n\n    print(\"\\nModel Performance on Validation Set:\")\n    print(\"-\" * 80)\n\n    for name, model in models.items():\n        if name == 'lgb':\n            y_pred = model.predict(X_val, num_iteration=model.best_iteration)\n        elif name == 'xgb':\n            dval = xgb.DMatrix(X_val)\n            y_pred = model.predict(dval)\n        else:  # catboost\n            y_pred = model.predict(X_val)\n\n        # Ensure non-negative predictions\n        y_pred = np.maximum(y_pred, 0)\n\n        mape = custom_mape(y_val.values, y_pred)\n        r2 = r2_score(y_val.values, y_pred)\n        rmse = np.sqrt(mean_squared_error(y_val.values, y_pred))\n\n        results[name] = {'MAPE': mape, 'R2': r2, 'RMSE': rmse}\n        predictions[name] = y_pred\n\n        print(f\"\\n{name.upper()}:\")\n        print(f\"  MAPE: {mape:.4f}%\")\n        print(f\"  R²: {r2:.4f}\")\n        print(f\"  RMSE: {rmse:.2f}\")\n\n    # Visualization\n    fig, axes = plt.subplots(1, 3, figsize=(18, 5))\n\n    for idx, (name, y_pred) in enumerate(predictions.items()):\n        axes[idx].scatter(y_val, y_pred, alpha=0.5, s=10)\n        axes[idx].plot([y_val.min(), y_val.max()], [y_val.min(), y_val.max()],\n                      'r--', lw=2, label='Perfect Prediction')\n        axes[idx].set_xlabel('Actual', fontsize=12)\n        axes[idx].set_ylabel('Predicted', fontsize=12)\n        axes[idx].set_title(f'{name.upper()} - R²: {results[name][\"R2\"]:.4f}',\n                           fontsize=14, fontweight='bold')\n        axes[idx].legend()\n        axes[idx].grid(True, alpha=0.3)\n\n    plt.tight_layout()\n    plt.savefig('model_predictions.png', dpi=300, bbox_inches='tight')\n    print(\"\\n✓ Prediction plots saved as 'model_predictions.png'\")\n\n    return results, predictions\n\n# Evaluate models\neval_results, val_predictions = evaluate_models(models, X_val, y_val)\n\n# Feature Importance (LightGBM)\nprint(\"\\n\" + \"-\" * 80)\nprint(\"TOP 20 MOST IMPORTANT FEATURES (LightGBM)\")\nprint(\"-\" * 80)\n\nimportance_df = pd.DataFrame({\n    'feature': features,\n    'importance': models['lgb'].feature_importance(importance_type='gain')\n}).sort_values('importance', ascending=False).head(20)\n\nprint(importance_df.to_string(index=False))\n\n# Plot feature importance\nplt.figure(figsize=(10, 8))\nplt.barh(importance_df['feature'], importance_df['importance'])\nplt.xlabel('Importance (Gain)', fontsize=12)\nplt.ylabel('Feature', fontsize=12)\nplt.title('Top 20 Feature Importance (LightGBM)', fontsize=14, fontweight='bold')\nplt.gca().invert_yaxis()\nplt.tight_layout()\nplt.savefig('feature_importance.png', dpi=300, bbox_inches='tight')\nprint(\"\\n✓ Feature importance plot saved as 'feature_importance.png'\")","metadata":{"trusted":true,"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"jjcpYAM1_9-K","outputId":"7a2b9631-965d-46f4-98a8-2259cd84f6ee","execution":{"iopub.status.busy":"2025-10-08T12:06:43.500359Z","iopub.execute_input":"2025-10-08T12:06:43.501842Z","iopub.status.idle":"2025-10-08T12:06:47.276295Z","shell.execute_reply.started":"2025-10-08T12:06:43.501802Z","shell.execute_reply":"2025-10-08T12:06:47.274371Z"}},"outputs":[{"name":"stdout","text":"\nModel Performance on Validation Set:\n--------------------------------------------------------------------------------\n\nLGB:\n  MAPE: 11.4271%\n  R²: 0.9892\n  RMSE: 3590.83\n\nXGB:\n  MAPE: 9.6235%\n  R²: 0.9947\n  RMSE: 2524.88\n\nCATBOOST:\n  MAPE: 60.7223%\n  R²: -0.2117\n  RMSE: 38030.53\n\n✓ Prediction plots saved as 'model_predictions.png'\n\n--------------------------------------------------------------------------------\nTOP 20 MOST IMPORTANT FEATURES (LightGBM)\n--------------------------------------------------------------------------------\n                                    feature   importance\n                area_new_house_transactions 6.887246e+13\n                 num_new_house_transactions 8.254403e+12\n               price_new_house_transactions 7.124688e+12\n                                     diff_1 6.342018e+12\ntotal_price_per_unit_new_house_transactions 4.383702e+12\n                                      lag_1 1.552041e+12\n                                    diff_12 1.380026e+12\n                             rolling_mean_3 1.050142e+12\n                        preowned_price_mean 4.876647e+11\n                               pct_change_1 3.099496e+11\n                                 sector_std 2.912029e+11\n                                 sector_max 2.728477e+11\n              period_new_house_sell_through 2.187467e+11\n                             rolling_mean_6 1.724383e+11\n                         sector_target_mean 1.141962e+11\n                       preowned_amount_mean 1.042147e+11\n           num_new_house_available_for_sale 5.854858e+10\n                             rolling_std_12 5.190726e+10\n                           land_amount_mean 4.202926e+10\n                                      lag_3 3.324316e+10\n\n✓ Feature importance plot saved as 'feature_importance.png'\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1800x500 with 3 Axes>","image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x800 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":32},{"cell_type":"markdown","source":"## 8. ENSEMBLE MODEL","metadata":{"id":"kL6OL6NfFDXI"}},{"cell_type":"code","source":"def create_ensemble(models, X_val, y_val, X_test):\n    \"\"\"Create weighted ensemble of models\"\"\"\n\n    print(\"\\nCreating ensemble model...\")\n\n    # Get validation predictions\n    val_preds = {}\n    for name, model in models.items():\n        if name == 'lgb':\n            val_preds[name] = model.predict(X_val, num_iteration=model.best_iteration)\n        elif name == 'xgb':\n            dval = xgb.DMatrix(X_val)\n            val_preds[name] = model.predict(dval)\n        else:\n            val_preds[name] = model.predict(X_val)\n\n        val_preds[name] = np.maximum(val_preds[name], 0)\n\n    # Find optimal weights (simple grid search)\n    best_mape = float('inf')\n    best_weights = None\n\n    for w1 in [0.2, 0.3, 0.4, 0.5]:\n        for w2 in [0.2, 0.3, 0.4, 0.5]:\n            w3 = 1 - w1 - w2\n            if w3 >= 0.1 and w3 <= 0.6:\n                ensemble_pred = (w1 * val_preds['lgb'] +\n                               w2 * val_preds['xgb'] +\n                               w3 * val_preds['catboost'])\n                mape = custom_mape(y_val.values, ensemble_pred)\n\n                if mape < best_mape:\n                    best_mape = mape\n                    best_weights = {'lgb': w1, 'xgb': w2, 'catboost': w3}\n\n    print(f\"\\nOptimal ensemble weights:\")\n    for model, weight in best_weights.items():\n        print(f\"  {model}: {weight:.2f}\")\n    print(f\"\\nEnsemble MAPE on validation: {best_mape:.4f}%\")\n\n    # Generate test predictions\n    test_preds = {}\n    for name, model in models.items():\n        if name == 'lgb':\n            test_preds[name] = model.predict(X_test, num_iteration=model.best_iteration)\n        elif name == 'xgb':\n            dtest = xgb.DMatrix(X_test)\n            test_preds[name] = model.predict(dtest)\n        else:\n            test_preds[name] = model.predict(X_test)\n\n        test_preds[name] = np.maximum(test_preds[name], 0)\n\n    # Ensemble test predictions\n    ensemble_test = (best_weights['lgb'] * test_preds['lgb'] +\n                     best_weights['xgb'] * test_preds['xgb'] +\n                     best_weights['catboost'] * test_preds['catboost'])\n\n    return ensemble_test, best_weights, best_mape\n\n# Create ensemble\nfinal_predictions, ensemble_weights, ensemble_mape = create_ensemble(\n    models, X_val, y_val, X_test\n)\n","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BdpXEsAAE_8Y","outputId":"9a8abf89-52ec-49e4-8b8c-5c1c8f33ca00","trusted":true,"execution":{"iopub.status.busy":"2025-10-08T12:06:47.277653Z","iopub.execute_input":"2025-10-08T12:06:47.278025Z","iopub.status.idle":"2025-10-08T12:06:47.474626Z","shell.execute_reply.started":"2025-10-08T12:06:47.277982Z","shell.execute_reply":"2025-10-08T12:06:47.473003Z"}},"outputs":[{"name":"stdout","text":"\nCreating ensemble model...\n\nOptimal ensemble weights:\n  lgb: 0.30\n  xgb: 0.50\n  catboost: 0.20\n\nEnsemble MAPE on validation: 15.9186%\n","output_type":"stream"}],"execution_count":33},{"cell_type":"markdown","source":"## 9. FINAL PREDICTION & SUBMISSION","metadata":{"id":"j_yJEtm9FIKZ"}},{"cell_type":"code","source":"create_submission(original_test_data, predictions, filename='submission.csv'):\n\n    # Create submission dataframe\n    submission = pd.DataFrame({\n        'id': original_test_data['id'].values,\n        'new_house_transaction_amount': predictions\n    })\n\n    # Ensure non-negative predictions\n    submission['new_house_transaction_amount'] = submission['new_house_transaction_amount'].clip(lower=0)\n\n    # Save to CSV\n    submission.to_csv(filename, index=False)\n\n    print(f\"\\n✓ Submission file saved as '{filename}'\")\n    print(f\"  Shape: {submission.shape}\")\n    print(f\"  Sample predictions:\")\n    print(submission.head(10))\n\n    print(f\"\\n  Prediction statistics:\")\n    print(f\"    Min: {submission['new_house_transaction_amount'].min():.2f}\")\n    print(f\"    Max: {submission['new_house_transaction_amount'].max():.2f}\")\n    print(f\"    Mean: {submission['new_house_transaction_amount'].mean():.2f}\")\n    print(f\"    Median: {submission['new_house_transaction_amount'].median():.2f}\")\n\n    return submission\n\n# Create submission\n# Use the original test data to get the 'id' column\nsubmission = create_submission(data['test'], final_predictions)","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fkN2Ql38FK8H","outputId":"fd9bf2a7-bbf4-4087-bcc8-7c7e1f7507e6","trusted":true,"execution":{"iopub.status.busy":"2025-10-08T12:21:27.712628Z","iopub.status.idle":"2025-10-08T12:21:27.713016Z","shell.execute_reply.started":"2025-10-08T12:21:27.712822Z","shell.execute_reply":"2025-10-08T12:21:27.712835Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 10. Extended LSTM ","metadata":{}},{"cell_type":"code","source":"import tensorflow as tf\nfrom tensorflow import keras\nfrom sklearn.preprocessing import MinMaxScaler\n\ndef create_sequences(data, seq_length=12):\n    sequences = []\n    targets = []\n    for i in range(len(data) - seq_length):\n        sequences.append(data[i:i+seq_length])\n        targets.append(data[i+seq_length])\n    return np.array(sequences), np.array(targets)\n\n# Prepare data\nscaler = MinMaxScaler()\nscaled_data = scaler.fit_transform(y_train.values.reshape(-1, 1))\n\nX_seq, y_seq = create_sequences(scaled_data, seq_length=12)\n\n# Build LSTM model\nmodel = keras.Sequential([\n    keras.layers.LSTM(128, return_sequences=True, input_shape=(12, 1)),\n    keras.layers.Dropout(0.2),\n    keras.layers.LSTM(64, return_sequences=False),\n    keras.layers.Dropout(0.2),\n    keras.layers.Dense(32, activation='relu'),\n    keras.layers.Dense(1)\n])\n\nmodel.compile(optimizer='adam', loss='mape', metrics=['mae'])\nmodel.fit(X_seq, y_seq, epochs=50, batch_size=32, validation_split=0.2)","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3Uz_LWwIFZjI","outputId":"c175f2cb-57c4-4c97-e0b3-d6f143011906","trusted":true,"execution":{"iopub.status.busy":"2025-10-08T12:06:47.512234Z","iopub.execute_input":"2025-10-08T12:06:47.512606Z","iopub.status.idle":"2025-10-08T12:09:49.426515Z","shell.execute_reply.started":"2025-10-08T12:06:47.512576Z","shell.execute_reply":"2025-10-08T12:09:49.424521Z"}},"outputs":[{"name":"stderr","text":"2025-10-08 12:06:50.173288: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1759925210.539933      37 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1759925210.621348      37 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n2025-10-08 12:07:09.751075: E external/local_xla/xla/stream_executor/cuda/cuda_driver.cc:152] failed call to cuInit: INTERNAL: CUDA error: Failed call to cuInit: UNKNOWN ERROR (303)\n","output_type":"stream"},{"name":"stdout","text":"Epoch 1/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 30ms/step - loss: 306.2948 - mae: 0.0551 - val_loss: 110.8267 - val_mae: 0.0521\nEpoch 2/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 1235.7009 - mae: 0.0566 - val_loss: 112.2044 - val_mae: 0.0512\nEpoch 3/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 26ms/step - loss: 882.9489 - mae: 0.0640 - val_loss: 2602.9617 - val_mae: 0.0799\nEpoch 4/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 24ms/step - loss: 7737.2534 - mae: 0.0855 - val_loss: 3052.0081 - val_mae: 0.0949\nEpoch 5/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 23ms/step - loss: 2990.5278 - mae: 0.0780 - val_loss: 4288.0425 - val_mae: 0.2297\nEpoch 6/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 27ms/step - loss: 24488.4688 - mae: 0.3151 - val_loss: 2431.2944 - val_mae: 0.1498\nEpoch 7/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 6402.1665 - mae: 0.1615 - val_loss: 32191.1152 - val_mae: 1.4055\nEpoch 8/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 139098.8281 - mae: 1.5430 - val_loss: 5739.5874 - val_mae: 0.1988\nEpoch 9/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 29ms/step - loss: 11247.0068 - mae: 0.2639 - val_loss: 23702.2930 - val_mae: 1.0476\nEpoch 10/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 29ms/step - loss: 333960.0938 - mae: 0.6575 - val_loss: 3610.8962 - val_mae: 0.1156\nEpoch 11/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 28ms/step - loss: 22842.9355 - mae: 0.1928 - val_loss: 14614.7393 - val_mae: 0.6641\nEpoch 12/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 27ms/step - loss: 81356.6250 - mae: 0.5808 - val_loss: 781.4592 - val_mae: 0.0396\nEpoch 13/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 28ms/step - loss: 6674.6553 - mae: 0.2008 - val_loss: 12468.4854 - val_mae: 0.5735\nEpoch 14/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 24ms/step - loss: 40822.4531 - mae: 0.5044 - val_loss: 15364.2881 - val_mae: 0.6010\nEpoch 15/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 24ms/step - loss: 546959.6875 - mae: 0.3680 - val_loss: 4465.7490 - val_mae: 0.2358\nEpoch 16/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 26ms/step - loss: 20449.2793 - mae: 0.2710 - val_loss: 8421.1006 - val_mae: 0.3089\nEpoch 17/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 23ms/step - loss: 162536.0781 - mae: 0.3256 - val_loss: 3549.4866 - val_mae: 0.1972\nEpoch 18/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 23ms/step - loss: 11936.3691 - mae: 0.2425 - val_loss: 10842.0176 - val_mae: 0.4102\nEpoch 19/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 24ms/step - loss: 84292.5000 - mae: 0.3595 - val_loss: 1590.0254 - val_mae: 0.1145\nEpoch 20/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 23ms/step - loss: 11651.9922 - mae: 0.1829 - val_loss: 9477.7666 - val_mae: 0.4473\nEpoch 21/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 24ms/step - loss: 24520.4453 - mae: 0.5384 - val_loss: 3679.3506 - val_mae: 0.2026\nEpoch 22/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 24ms/step - loss: 18287.8242 - mae: 0.2214 - val_loss: 6632.3770 - val_mae: 0.2352\nEpoch 23/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 24ms/step - loss: 12338.1309 - mae: 0.2624 - val_loss: 2981.1016 - val_mae: 0.1732\nEpoch 24/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 23ms/step - loss: 222624.2969 - mae: 0.2223 - val_loss: 4704.4414 - val_mae: 0.1575\nEpoch 25/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 22ms/step - loss: 23024.4434 - mae: 0.2108 - val_loss: 9027.3408 - val_mae: 0.4283\nEpoch 26/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 23ms/step - loss: 53508.6680 - mae: 0.3837 - val_loss: 3489.9387 - val_mae: 0.1110\nEpoch 27/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 22ms/step - loss: 6733.1250 - mae: 0.1775 - val_loss: 1965.7977 - val_mae: 0.1303\nEpoch 28/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 22ms/step - loss: 144078.0469 - mae: 0.2215 - val_loss: 2149.2576 - val_mae: 0.0656\nEpoch 29/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 23ms/step - loss: 29585.4629 - mae: 0.2252 - val_loss: 9730.0654 - val_mae: 0.4580\nEpoch 30/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 22ms/step - loss: 24797.6621 - mae: 0.4245 - val_loss: 1393.6313 - val_mae: 0.1062\nEpoch 31/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 24ms/step - loss: 89807.0000 - mae: 0.1669 - val_loss: 4344.9888 - val_mae: 0.1435\nEpoch 32/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 23ms/step - loss: 61150.9727 - mae: 0.1945 - val_loss: 4320.0059 - val_mae: 0.2297\nEpoch 33/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 36330.0898 - mae: 0.2200 - val_loss: 4413.4209 - val_mae: 0.1461\nEpoch 34/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 40360.8906 - mae: 0.2250 - val_loss: 9787.9951 - val_mae: 0.3660\nEpoch 35/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 24ms/step - loss: 70349.3828 - mae: 0.3495 - val_loss: 1442.9579 - val_mae: 0.1083\nEpoch 36/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 29ms/step - loss: 24783.4844 - mae: 0.1728 - val_loss: 6917.6230 - val_mae: 0.2469\nEpoch 37/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 26ms/step - loss: 57804.9102 - mae: 0.2411 - val_loss: 1575.8234 - val_mae: 0.1139\nEpoch 38/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 29ms/step - loss: 3767.1538 - mae: 0.1113 - val_loss: 3878.2739 - val_mae: 0.1256\nEpoch 39/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 27ms/step - loss: 50956.0820 - mae: 0.1440 - val_loss: 2912.4253 - val_mae: 0.1703\nEpoch 40/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 24ms/step - loss: 79960.0469 - mae: 0.1431 - val_loss: 3194.8318 - val_mae: 0.1001\nEpoch 41/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 26ms/step - loss: 11445.4443 - mae: 0.2450 - val_loss: 7336.3022 - val_mae: 0.2641\nEpoch 42/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 27ms/step - loss: 357366.5000 - mae: 0.1229 - val_loss: 1075.9691 - val_mae: 0.0418\nEpoch 43/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 28ms/step - loss: 21545.5566 - mae: 0.1305 - val_loss: 4739.5640 - val_mae: 0.1589\nEpoch 44/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 24ms/step - loss: 39614.3086 - mae: 0.1515 - val_loss: 2055.4722 - val_mae: 0.1341\nEpoch 45/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 26ms/step - loss: 12158.6006 - mae: 0.1218 - val_loss: 3164.7051 - val_mae: 0.0990\nEpoch 46/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 18359.6484 - mae: 0.1069 - val_loss: 194.1246 - val_mae: 0.0556\nEpoch 47/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 1727.5831 - mae: 0.0777 - val_loss: 2257.6804 - val_mae: 0.1426\nEpoch 48/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 26ms/step - loss: 1885.3112 - mae: 0.1086 - val_loss: 2601.7222 - val_mae: 0.1572\nEpoch 49/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 24ms/step - loss: 30846.1172 - mae: 0.1780 - val_loss: 142.4688 - val_mae: 0.0480\nEpoch 50/50\n\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 27ms/step - loss: 5878.3647 - mae: 0.0669 - val_loss: 3529.0803 - val_mae: 0.1963\n","output_type":"stream"},{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"<keras.src.callbacks.history.History at 0x798e841ffa50>"},"metadata":{}}],"execution_count":35},{"cell_type":"code","source":"from prophet import Prophet\n\ndef train_prophet_by_sector(df):\n    predictions = []\n\n    for sector in df['sector'].unique():\n        sector_data = df[df['sector'] == sector][['month', 'amount_new_house_transaction']]\n        sector_data.columns = ['ds', 'y']\n\n        model = Prophet(\n            yearly_seasonality=True,\n            weekly_seasonality=False,\n            daily_seasonality=False,\n            changepoint_prior_scale=0.05\n        )\n\n        model.add_country_holidays(country_name='CN')\n        model.fit(sector_data)\n\n        future = model.make_future_dataframe(periods=6, freq='MS')\n        forecast = model.predict(future)\n\n        predictions.append(forecast[['ds', 'yhat']].tail(6))\n\n    return pd.concat(predictions, ignore_index=True)","metadata":{"id":"sx7a6XGXF9c8","trusted":true,"execution":{"iopub.status.busy":"2025-10-08T12:21:27.715231Z","iopub.status.idle":"2025-10-08T12:21:27.715608Z","shell.execute_reply.started":"2025-10-08T12:21:27.715440Z","shell.execute_reply":"2025-10-08T12:21:27.715454Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from sklearn.ensemble import StackingRegressor\nfrom sklearn.linear_model import Ridge\n\n# Create base models\nestimators = [\n    ('lgb', lgb.LGBMRegressor(random_state=RANDOM_SEED)),\n    ('xgb', xgb.XGBRegressor(random_state=RANDOM_SEED)),\n    ('cat', CatBoostRegressor(random_state=RANDOM_SEED, verbose=0))\n]\n\n# Create stacking ensemble with Ridge meta-learner\nstacking_model = StackingRegressor(\n    estimators=estimators,\n    final_estimator=Ridge(),\n    cv=5\n)\n\nstacking_model.fit(X_train, y_train)\nstacked_predictions = stacking_model.predict(X_test)","metadata":{"id":"ZL0CAvKDGBzE","trusted":true,"execution":{"iopub.status.busy":"2025-10-08T12:21:27.716672Z","iopub.status.idle":"2025-10-08T12:21:27.717089Z","shell.execute_reply.started":"2025-10-08T12:21:27.716875Z","shell.execute_reply":"2025-10-08T12:21:27.716893Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"!pip install optuna","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4aTsIFfzG4Ah","outputId":"537ec70b-e229-40ab-cef4-e7d5c45a6c96","trusted":true,"execution":{"iopub.status.busy":"2025-10-08T12:11:16.346720Z","iopub.execute_input":"2025-10-08T12:11:16.347062Z","iopub.status.idle":"2025-10-08T12:11:21.498265Z","shell.execute_reply.started":"2025-10-08T12:11:16.347029Z","shell.execute_reply":"2025-10-08T12:11:21.496698Z"}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: optuna in /usr/local/lib/python3.11/dist-packages (4.5.0)\nRequirement already satisfied: alembic>=1.5.0 in /usr/local/lib/python3.11/dist-packages (from optuna) (1.16.5)\nRequirement already satisfied: colorlog in /usr/local/lib/python3.11/dist-packages (from optuna) (6.9.0)\nRequirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from optuna) (1.26.4)\nRequirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from optuna) (25.0)\nRequirement already satisfied: sqlalchemy>=1.4.2 in /usr/local/lib/python3.11/dist-packages (from optuna) (2.0.41)\nRequirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from optuna) (4.67.1)\nRequirement already satisfied: PyYAML in /usr/local/lib/python3.11/dist-packages (from optuna) (6.0.3)\nRequirement already satisfied: Mako in /usr/local/lib/python3.11/dist-packages (from alembic>=1.5.0->optuna) (1.3.10)\nRequirement already satisfied: typing-extensions>=4.12 in /usr/local/lib/python3.11/dist-packages (from alembic>=1.5.0->optuna) (4.15.0)\nRequirement already satisfied: greenlet>=1 in /usr/local/lib/python3.11/dist-packages (from sqlalchemy>=1.4.2->optuna) (3.2.3)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.11/dist-packages (from numpy->optuna) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.11/dist-packages (from numpy->optuna) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.11/dist-packages (from numpy->optuna) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.11/dist-packages (from numpy->optuna) (2025.2.0)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.11/dist-packages (from numpy->optuna) (2022.2.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.11/dist-packages (from numpy->optuna) (2.4.1)\nRequirement already satisfied: MarkupSafe>=0.9.2 in /usr/local/lib/python3.11/dist-packages (from Mako->alembic>=1.5.0->optuna) (3.0.2)\nRequirement already satisfied: intel-openmp<2026,>=2024 in /usr/local/lib/python3.11/dist-packages (from mkl->numpy->optuna) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.11/dist-packages (from mkl->numpy->optuna) (2022.2.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.11/dist-packages (from tbb==2022.*->mkl->numpy->optuna) (1.4.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.11/dist-packages (from mkl_umath->numpy->optuna) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.11/dist-packages (from intel-openmp<2026,>=2024->mkl->numpy->optuna) (2024.2.0)\n","output_type":"stream"}],"execution_count":38},{"cell_type":"code","source":"import optuna\n\ndef objective(trial):\n    params = {\n        'num_leaves': trial.suggest_int('num_leaves', 20, 100),\n        'learning_rate': trial.suggest_float('learning_rate', 0.01, 0.3),\n        'feature_fraction': trial.suggest_float('feature_fraction', 0.5, 1.0),\n        'bagging_fraction': trial.suggest_float('bagging_fraction', 0.5, 1.0),\n        'min_child_samples': trial.suggest_int('min_child_samples', 5, 100),\n        'reg_alpha': trial.suggest_float('reg_alpha', 1e-8, 10.0, log=True),\n        'reg_lambda': trial.suggest_float('reg_lambda', 1e-8, 10.0, log=True)\n    }\n\n    model = lgb.train(\n        params,\n        lgb.Dataset(X_train, label=y_train),\n        num_boost_round=1000,\n        valid_sets=[lgb.Dataset(X_val, label=y_val)],\n        callbacks=[lgb.early_stopping(50)]\n    )\n\n    y_pred = model.predict(X_val)\n    return custom_mape(y_val.values, y_pred)\n\n# Check if Optuna is available before running the study\nif OPTUNA_AVAILABLE:\n    study = optuna.create_study(direction='minimize')\n    study.optimize(objective, n_trials=100)\n\n    print(f\"Best MAPE: {study.best_value:.4f}\")\n    print(f\"Best params: {study.best_params}\")\n\nprint(\"\\n\" + \"=\" * 80)\nprint(\"✅ PIPELINE EXECUTION COMPLETE!\")\nprint(\"=\" * 80)\nprint(f\"\"\"\nAll outputs generated successfully:\n  → submission.csv (ready for Kaggle submission)\n  → eda_overview.png\n  → model_predictions.png\n  → feature_importance.png\n\nFinal Model: Weighted Ensemble\nValidation MAPE: {ensemble_mape:.4f}%\n\nThank you for using this ML pipeline!\nFor questions or improvements, refer to the documentation above.\n\"\"\")","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rm2Y6McHGGqs","outputId":"39f953c4-bced-4f96-ff66-376bdff77d42","trusted":true,"execution":{"iopub.status.busy":"2025-10-08T12:11:25.944657Z","iopub.execute_input":"2025-10-08T12:11:25.945089Z","iopub.status.idle":"2025-10-08T12:21:27.689227Z","shell.execute_reply.started":"2025-10-08T12:11:25.945053Z","shell.execute_reply":"2025-10-08T12:21:27.688450Z"}},"outputs":[{"name":"stderr","text":"[I 2025-10-08 12:11:25,955] A new study created in memory with name: no-name-45c1c98b-2a3a-45c2-8a2f-ac9a22d1c409\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:11:28,783] Trial 0 finished with value: 9.168288125624471 and parameters: {'num_leaves': 65, 'learning_rate': 0.05061248968997615, 'feature_fraction': 0.6481592030709844, 'bagging_fraction': 0.8778375637876099, 'min_child_samples': 28, 'reg_alpha': 0.0006622787205249254, 'reg_lambda': 0.00022952164662239782}. Best is trial 0 with value: 9.168288125624471.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[253]\tvalid_0's l2: 1.22688e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:11:29,346] Trial 1 finished with value: 13.958793029225545 and parameters: {'num_leaves': 34, 'learning_rate': 0.21910357690811474, 'feature_fraction': 0.5349247791634515, 'bagging_fraction': 0.8890883426612132, 'min_child_samples': 52, 'reg_alpha': 4.8900690213843466e-05, 'reg_lambda': 0.000294162542137844}. Best is trial 0 with value: 9.168288125624471.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[43]\tvalid_0's l2: 2.26918e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:11:30,957] Trial 2 finished with value: 14.150409581779652 and parameters: {'num_leaves': 27, 'learning_rate': 0.12599057881060402, 'feature_fraction': 0.8107843973219753, 'bagging_fraction': 0.5848446841526471, 'min_child_samples': 31, 'reg_alpha': 0.0002670323052214279, 'reg_lambda': 8.90362418864018}. Best is trial 0 with value: 9.168288125624471.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[260]\tvalid_0's l2: 1.63409e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:11:33,290] Trial 3 finished with value: 8.761672930046949 and parameters: {'num_leaves': 52, 'learning_rate': 0.07982157898495906, 'feature_fraction': 0.9945162601596099, 'bagging_fraction': 0.8912077448505495, 'min_child_samples': 51, 'reg_alpha': 1.9241726275798543, 'reg_lambda': 1.1736037658374177e-06}. Best is trial 3 with value: 8.761672930046949.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[159]\tvalid_0's l2: 1.93396e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:11:35,859] Trial 4 finished with value: 11.519257190857797 and parameters: {'num_leaves': 69, 'learning_rate': 0.03780907159582892, 'feature_fraction': 0.5471153180159063, 'bagging_fraction': 0.7729396114875953, 'min_child_samples': 90, 'reg_alpha': 0.0049178364043978755, 'reg_lambda': 2.504282776367247e-08}. Best is trial 3 with value: 8.761672930046949.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[371]\tvalid_0's l2: 2.3336e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:11:48,987] Trial 5 finished with value: 7.42473505711865 and parameters: {'num_leaves': 95, 'learning_rate': 0.05214698892691272, 'feature_fraction': 0.8735692059762712, 'bagging_fraction': 0.9209814865716358, 'min_child_samples': 39, 'reg_alpha': 0.06580134480134886, 'reg_lambda': 0.01155930447528686}. Best is trial 5 with value: 7.42473505711865.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[450]\tvalid_0's l2: 1.09133e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:11:49,932] Trial 6 finished with value: 10.987718038149003 and parameters: {'num_leaves': 62, 'learning_rate': 0.17626774604475617, 'feature_fraction': 0.8101426524389895, 'bagging_fraction': 0.7382087426104391, 'min_child_samples': 83, 'reg_alpha': 3.1920818475932324, 'reg_lambda': 0.001982337133479769}. Best is trial 5 with value: 7.42473505711865.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[58]\tvalid_0's l2: 2.91992e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:11:50,754] Trial 7 finished with value: 12.802492153054038 and parameters: {'num_leaves': 39, 'learning_rate': 0.2748939558135995, 'feature_fraction': 0.9943301607114285, 'bagging_fraction': 0.7771063266435995, 'min_child_samples': 72, 'reg_alpha': 0.23846720731058435, 'reg_lambda': 0.0015803646596639538}. Best is trial 5 with value: 7.42473505711865.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[41]\tvalid_0's l2: 2.42872e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:11:51,451] Trial 8 finished with value: 21.418548531272368 and parameters: {'num_leaves': 21, 'learning_rate': 0.2858811300991375, 'feature_fraction': 0.5909212314679784, 'bagging_fraction': 0.6809570511201959, 'min_child_samples': 11, 'reg_alpha': 1.80227724448923e-05, 'reg_lambda': 1.5566761870702906e-06}. Best is trial 5 with value: 7.42473505711865.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[116]\tvalid_0's l2: 2.29837e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:11:54,821] Trial 9 finished with value: 9.098810710883164 and parameters: {'num_leaves': 40, 'learning_rate': 0.02911471965640653, 'feature_fraction': 0.7915808390834185, 'bagging_fraction': 0.8537029482806308, 'min_child_samples': 72, 'reg_alpha': 0.28503911809224225, 'reg_lambda': 0.6047011529324365}. Best is trial 5 with value: 7.42473505711865.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[413]\tvalid_0's l2: 1.89791e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:11:56,781] Trial 10 finished with value: 8.415155054013036 and parameters: {'num_leaves': 95, 'learning_rate': 0.10879723041869271, 'feature_fraction': 0.9026955257953423, 'bagging_fraction': 0.9903210820381718, 'min_child_samples': 6, 'reg_alpha': 1.80337965715147e-08, 'reg_lambda': 0.048087612073012764}. Best is trial 5 with value: 7.42473505711865.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[58]\tvalid_0's l2: 1.01984e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:11:58,825] Trial 11 finished with value: 9.006335741594231 and parameters: {'num_leaves': 97, 'learning_rate': 0.10612115631275937, 'feature_fraction': 0.8882788913949319, 'bagging_fraction': 0.9831746479395629, 'min_child_samples': 6, 'reg_alpha': 1.2612245494694369e-08, 'reg_lambda': 0.047997372522060176}. Best is trial 5 with value: 7.42473505711865.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[60]\tvalid_0's l2: 1.16707e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:12:06,790] Trial 12 finished with value: 8.7208705660312 and parameters: {'num_leaves': 92, 'learning_rate': 0.16065182326893734, 'feature_fraction': 0.8973975312498911, 'bagging_fraction': 0.9778068690917187, 'min_child_samples': 29, 'reg_alpha': 1.0110588139128956e-08, 'reg_lambda': 0.06962544786274891}. Best is trial 5 with value: 7.42473505711865.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[103]\tvalid_0's l2: 1.68678e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:12:11,694] Trial 13 finished with value: 8.228484834714855 and parameters: {'num_leaves': 81, 'learning_rate': 0.08412303603577287, 'feature_fraction': 0.9031449172052167, 'bagging_fraction': 0.9963693569820075, 'min_child_samples': 40, 'reg_alpha': 1.7848457364722828e-06, 'reg_lambda': 0.017860962260843074}. Best is trial 5 with value: 7.42473505711865.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[321]\tvalid_0's l2: 1.31631e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:12:17,115] Trial 14 finished with value: 8.963264123884827 and parameters: {'num_leaves': 81, 'learning_rate': 0.07187123467808869, 'feature_fraction': 0.7029146882444332, 'bagging_fraction': 0.510359425300814, 'min_child_samples': 42, 'reg_alpha': 8.766736772920971e-07, 'reg_lambda': 3.647577853147969e-05}. Best is trial 5 with value: 7.42473505711865.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[426]\tvalid_0's l2: 1.18256e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:12:22,533] Trial 15 finished with value: 7.046704337624473 and parameters: {'num_leaves': 81, 'learning_rate': 0.07319617700129304, 'feature_fraction': 0.9265076273538898, 'bagging_fraction': 0.9313945152659548, 'min_child_samples': 41, 'reg_alpha': 1.1233315497174235e-06, 'reg_lambda': 0.01228009979409531}. Best is trial 15 with value: 7.046704337624473.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[363]\tvalid_0's l2: 1.07931e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:12:31,193] Trial 16 finished with value: 8.274497846715837 and parameters: {'num_leaves': 79, 'learning_rate': 0.01940451051984838, 'feature_fraction': 0.9486401654315375, 'bagging_fraction': 0.9289634336308594, 'min_child_samples': 67, 'reg_alpha': 0.01062912171353476, 'reg_lambda': 1.7895670363376777}. Best is trial 15 with value: 7.046704337624473.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[833]\tvalid_0's l2: 1.71822e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:12:33,009] Trial 17 finished with value: 8.28768687129543 and parameters: {'num_leaves': 87, 'learning_rate': 0.12558930458209874, 'feature_fraction': 0.7429650596118866, 'bagging_fraction': 0.8136327362325873, 'min_child_samples': 19, 'reg_alpha': 2.5336835158907436e-07, 'reg_lambda': 0.0046146343466366676}. Best is trial 15 with value: 7.046704337624473.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[90]\tvalid_0's l2: 2.34792e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:12:34,347] Trial 18 finished with value: 12.533693907586052 and parameters: {'num_leaves': 72, 'learning_rate': 0.21438275550051708, 'feature_fraction': 0.8326292820341068, 'bagging_fraction': 0.7006927789833728, 'min_child_samples': 62, 'reg_alpha': 0.018183274617167264, 'reg_lambda': 2.592635544567412e-05}. Best is trial 15 with value: 7.046704337624473.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[60]\tvalid_0's l2: 2.89496e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:12:40,292] Trial 19 finished with value: 7.418808340336983 and parameters: {'num_leaves': 86, 'learning_rate': 0.05696908195590378, 'feature_fraction': 0.8552443219764772, 'bagging_fraction': 0.9326149234211631, 'min_child_samples': 42, 'reg_alpha': 1.342544860124441e-05, 'reg_lambda': 0.36877110155893766}. Best is trial 15 with value: 7.046704337624473.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[414]\tvalid_0's l2: 1.06643e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:12:41,479] Trial 20 finished with value: 13.371939820681881 and parameters: {'num_leaves': 50, 'learning_rate': 0.18922166946521768, 'feature_fraction': 0.7513245452435848, 'bagging_fraction': 0.8325350684481849, 'min_child_samples': 57, 'reg_alpha': 7.609190207168339e-06, 'reg_lambda': 0.4458183281533018}. Best is trial 15 with value: 7.046704337624473.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[90]\tvalid_0's l2: 2.97743e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:12:48,975] Trial 21 finished with value: 6.739122463212567 and parameters: {'num_leaves': 99, 'learning_rate': 0.05485842356016479, 'feature_fraction': 0.9473639280280919, 'bagging_fraction': 0.9322626861564342, 'min_child_samples': 42, 'reg_alpha': 2.6530467515755145e-07, 'reg_lambda': 0.20674682836198982}. Best is trial 21 with value: 6.739122463212567.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[476]\tvalid_0's l2: 1.23729e+07\nTraining until validation scores don't improve for 50 rounds\nDid not meet early stopping. Best iteration is:\n[988]\tvalid_0's l2: 1.31824e+07\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:13:01,873] Trial 22 finished with value: 7.24052200019098 and parameters: {'num_leaves': 100, 'learning_rate': 0.017151519824846174, 'feature_fraction': 0.9286864059884294, 'bagging_fraction': 0.9419798406943076, 'min_child_samples': 45, 'reg_alpha': 2.3051751393025436e-07, 'reg_lambda': 0.21006944649751}. Best is trial 21 with value: 6.739122463212567.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\nEarly stopping, best iteration is:\n[864]\tvalid_0's l2: 1.84942e+07\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:13:15,539] Trial 23 finished with value: 8.995939336475272 and parameters: {'num_leaves': 99, 'learning_rate': 0.02024960399455643, 'feature_fraction': 0.9385573817808277, 'bagging_fraction': 0.9397237062007725, 'min_child_samples': 50, 'reg_alpha': 1.7004990999258688e-07, 'reg_lambda': 4.702139737857351}. Best is trial 21 with value: 6.739122463212567.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:13:18,679] Trial 24 finished with value: 6.7004738359173155 and parameters: {'num_leaves': 88, 'learning_rate': 0.09560673413050351, 'feature_fraction': 0.9586881940012019, 'bagging_fraction': 0.8163249171213481, 'min_child_samples': 22, 'reg_alpha': 1.0578760901904055e-07, 'reg_lambda': 0.15698497748892315}. Best is trial 24 with value: 6.7004738359173155.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[161]\tvalid_0's l2: 9.71491e+06\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:13:21,524] Trial 25 finished with value: 7.179597709855283 and parameters: {'num_leaves': 75, 'learning_rate': 0.09518628982796512, 'feature_fraction': 0.9641063238378275, 'bagging_fraction': 0.8093248349719574, 'min_child_samples': 19, 'reg_alpha': 1.9903852405453807e-06, 'reg_lambda': 2.3964596935155265}. Best is trial 24 with value: 6.7004738359173155.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[162]\tvalid_0's l2: 1.92361e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:13:24,386] Trial 26 finished with value: 7.478395928150817 and parameters: {'num_leaves': 88, 'learning_rate': 0.13503441633251162, 'feature_fraction': 0.9618840273827538, 'bagging_fraction': 0.6347558597621813, 'min_child_samples': 21, 'reg_alpha': 5.593772977540869e-08, 'reg_lambda': 0.16396999100912327}. Best is trial 24 with value: 6.7004738359173155.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[130]\tvalid_0's l2: 9.6222e+06\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:13:27,454] Trial 27 finished with value: 6.514895517932451 and parameters: {'num_leaves': 89, 'learning_rate': 0.06575101251484237, 'feature_fraction': 0.9968639216754168, 'bagging_fraction': 0.8622549472231289, 'min_child_samples': 34, 'reg_alpha': 7.335579361996048e-07, 'reg_lambda': 0.004278450371791616}. Best is trial 27 with value: 6.514895517932451.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[135]\tvalid_0's l2: 1.57194e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:13:36,266] Trial 28 finished with value: 9.679042373585592 and parameters: {'num_leaves': 90, 'learning_rate': 0.1376212775820355, 'feature_fraction': 0.9998405197841739, 'bagging_fraction': 0.8388922172804072, 'min_child_samples': 33, 'reg_alpha': 6.87333053777404e-08, 'reg_lambda': 0.0013092154994092686}. Best is trial 27 with value: 6.514895517932451.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[462]\tvalid_0's l2: 1.08165e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:13:39,470] Trial 29 finished with value: 9.545141037475105 and parameters: {'num_leaves': 57, 'learning_rate': 0.04744117107579322, 'feature_fraction': 0.654224419041237, 'bagging_fraction': 0.8689225235226741, 'min_child_samples': 23, 'reg_alpha': 0.0004920464549433128, 'reg_lambda': 5.147623389604254e-05}. Best is trial 27 with value: 6.514895517932451.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[331]\tvalid_0's l2: 1.20149e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:13:41,336] Trial 30 finished with value: 28.151194821688936 and parameters: {'num_leaves': 75, 'learning_rate': 0.05658352606445173, 'feature_fraction': 0.9672182050732048, 'bagging_fraction': 0.7864632948867001, 'min_child_samples': 13, 'reg_alpha': 0.00017368243521222082, 'reg_lambda': 0.00047481226960605804}. Best is trial 27 with value: 6.514895517932451.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[71]\tvalid_0's l2: 2.56814e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:13:44,432] Trial 31 finished with value: 6.392346586631 and parameters: {'num_leaves': 84, 'learning_rate': 0.0798293006905503, 'feature_fraction': 0.9215978172768524, 'bagging_fraction': 0.8861113086194063, 'min_child_samples': 33, 'reg_alpha': 9.393589625184672e-07, 'reg_lambda': 0.011912927411046853}. Best is trial 31 with value: 6.392346586631.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[156]\tvalid_0's l2: 1.60935e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:13:52,076] Trial 32 finished with value: 9.408017698889076 and parameters: {'num_leaves': 86, 'learning_rate': 0.10166325023091843, 'feature_fraction': 0.8592879090831314, 'bagging_fraction': 0.8934151529570797, 'min_child_samples': 33, 'reg_alpha': 4.472933589254735e-06, 'reg_lambda': 0.005780103209870748}. Best is trial 31 with value: 6.392346586631.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[512]\tvalid_0's l2: 1.04178e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:13:56,563] Trial 33 finished with value: 6.175553215505964 and parameters: {'num_leaves': 92, 'learning_rate': 0.0659700396622965, 'feature_fraction': 0.9223646176025992, 'bagging_fraction': 0.8725427767407397, 'min_child_samples': 26, 'reg_alpha': 5.286443655505411e-05, 'reg_lambda': 0.08991254871843382}. Best is trial 33 with value: 6.175553215505964.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[247]\tvalid_0's l2: 1.02281e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:13:59,287] Trial 34 finished with value: 8.055099231114923 and parameters: {'num_leaves': 66, 'learning_rate': 0.11696305651844845, 'feature_fraction': 0.91553983750165, 'bagging_fraction': 0.8880578437161447, 'min_child_samples': 27, 'reg_alpha': 9.619429853172073e-05, 'reg_lambda': 0.00035716064397584864}. Best is trial 33 with value: 6.175553215505964.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[190]\tvalid_0's l2: 1.22018e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:14:00,946] Trial 35 finished with value: 35.20659464889025 and parameters: {'num_leaves': 91, 'learning_rate': 0.08466151133447952, 'feature_fraction': 0.9783486056483529, 'bagging_fraction': 0.7294344512062565, 'min_child_samples': 14, 'reg_alpha': 0.001289784748668749, 'reg_lambda': 0.031082683175092007}. Best is trial 33 with value: 6.175553215505964.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[43]\tvalid_0's l2: 2.74608e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:14:04,578] Trial 36 finished with value: 6.783600088921871 and parameters: {'num_leaves': 84, 'learning_rate': 0.06977789892614808, 'feature_fraction': 0.8345983189199814, 'bagging_fraction': 0.8084771397823237, 'min_child_samples': 26, 'reg_alpha': 2.4201299515627968e-05, 'reg_lambda': 0.08702504620214324}. Best is trial 33 with value: 6.175553215505964.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[207]\tvalid_0's l2: 1.12691e+07\nTraining until validation scores don't improve for 50 rounds\nDid not meet early stopping. Best iteration is:\n[973]\tvalid_0's l2: 1.12734e+07\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:14:19,205] Trial 37 finished with value: 7.423321557127403 and parameters: {'num_leaves': 93, 'learning_rate': 0.03635333364692563, 'feature_fraction': 0.8798561430786784, 'bagging_fraction': 0.8634647873112401, 'min_child_samples': 36, 'reg_alpha': 5.3133262143597556e-08, 'reg_lambda': 0.00010867262533446622}. Best is trial 33 with value: 6.175553215505964.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:14:22,431] Trial 38 finished with value: 8.32792262174437 and parameters: {'num_leaves': 76, 'learning_rate': 0.08411272606398786, 'feature_fraction': 0.9993657013302125, 'bagging_fraction': 0.8859217774068238, 'min_child_samples': 48, 'reg_alpha': 6.911450012513803e-07, 'reg_lambda': 1.1066528211850541}. Best is trial 33 with value: 6.175553215505964.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[207]\tvalid_0's l2: 1.37396e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:14:29,050] Trial 39 finished with value: 12.526267819251643 and parameters: {'num_leaves': 69, 'learning_rate': 0.14760756753549947, 'feature_fraction': 0.7901376501918791, 'bagging_fraction': 0.7702784132612187, 'min_child_samples': 34, 'reg_alpha': 5.95629410763761e-05, 'reg_lambda': 0.005396383811424279}. Best is trial 33 with value: 6.175553215505964.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[555]\tvalid_0's l2: 1.52765e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:14:30,747] Trial 40 finished with value: 9.578444028393578 and parameters: {'num_leaves': 84, 'learning_rate': 0.2556229836755243, 'feature_fraction': 0.9218426601464769, 'bagging_fraction': 0.9046697015906131, 'min_child_samples': 16, 'reg_alpha': 3.27919835255048e-06, 'reg_lambda': 4.9037639702295715e-08}. Best is trial 33 with value: 6.175553215505964.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[69]\tvalid_0's l2: 2.48973e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:14:35,890] Trial 41 finished with value: 5.955594938712023 and parameters: {'num_leaves': 96, 'learning_rate': 0.0594940708600762, 'feature_fraction': 0.948051737187887, 'bagging_fraction': 0.8425311356365449, 'min_child_samples': 25, 'reg_alpha': 2.7270240313424216e-07, 'reg_lambda': 0.16495428547092825}. Best is trial 41 with value: 5.955594938712023.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[270]\tvalid_0's l2: 1.10094e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:14:38,615] Trial 42 finished with value: 6.483124549172558 and parameters: {'num_leaves': 93, 'learning_rate': 0.0942934258773301, 'feature_fraction': 0.9741483214321734, 'bagging_fraction': 0.8392389925378457, 'min_child_samples': 27, 'reg_alpha': 5.215026562858686e-07, 'reg_lambda': 0.022829377619628402}. Best is trial 41 with value: 5.955594938712023.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[122]\tvalid_0's l2: 1.15422e+07\nTraining until validation scores don't improve for 50 rounds\nEarly stopping, best iteration is:\n[802]\tvalid_0's l2: 1.34019e+07\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:14:53,338] Trial 43 finished with value: 6.5271124769146205 and parameters: {'num_leaves': 94, 'learning_rate': 0.04282084612802892, 'feature_fraction': 0.9890798572559781, 'bagging_fraction': 0.8572743751340879, 'min_child_samples': 29, 'reg_alpha': 4.353933966345289e-07, 'reg_lambda': 0.0011724637461065412}. Best is trial 41 with value: 5.955594938712023.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:14:59,920] Trial 44 finished with value: 6.372606601640387 and parameters: {'num_leaves': 95, 'learning_rate': 0.06850467716534539, 'feature_fraction': 0.9724866376359476, 'bagging_fraction': 0.8433896534029047, 'min_child_samples': 25, 'reg_alpha': 0.001199888186642934, 'reg_lambda': 0.017943779114849397}. Best is trial 41 with value: 5.955594938712023.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[353]\tvalid_0's l2: 1.10646e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:15:08,173] Trial 45 finished with value: 5.961169240408037 and parameters: {'num_leaves': 96, 'learning_rate': 0.033589404992437455, 'feature_fraction': 0.8673380849904784, 'bagging_fraction': 0.8392891742376496, 'min_child_samples': 26, 'reg_alpha': 0.0029133562199704106, 'reg_lambda': 0.023463410034642272}. Best is trial 41 with value: 5.955594938712023.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[502]\tvalid_0's l2: 1.12618e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:15:15,727] Trial 46 finished with value: 8.157805472144588 and parameters: {'num_leaves': 96, 'learning_rate': 0.03178086388634932, 'feature_fraction': 0.8604754343819171, 'bagging_fraction': 0.9036568592260688, 'min_child_samples': 24, 'reg_alpha': 0.0024338830305252997, 'reg_lambda': 9.585325471692329}. Best is trial 41 with value: 5.955594938712023.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[511]\tvalid_0's l2: 1.28319e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:15:19,272] Trial 47 finished with value: 16.975472029046905 and parameters: {'num_leaves': 100, 'learning_rate': 0.03171437512155222, 'feature_fraction': 0.8919436315211446, 'bagging_fraction': 0.958570335266591, 'min_child_samples': 9, 'reg_alpha': 0.029064562175860145, 'reg_lambda': 0.01195781183048589}. Best is trial 41 with value: 5.955594938712023.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[146]\tvalid_0's l2: 1.0588e+07\nTraining until validation scores don't improve for 50 rounds\nDid not meet early stopping. Best iteration is:\n[1000]\tvalid_0's l2: 2.04778e+07\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:15:33,367] Trial 48 finished with value: 6.557052736200626 and parameters: {'num_leaves': 95, 'learning_rate': 0.012430126507879585, 'feature_fraction': 0.9093892170495399, 'bagging_fraction': 0.7610688017269834, 'min_child_samples': 38, 'reg_alpha': 0.004520069320752548, 'reg_lambda': 0.06061790030407167}. Best is trial 41 with value: 5.955594938712023.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:15:36,056] Trial 49 finished with value: 11.447356343076054 and parameters: {'num_leaves': 46, 'learning_rate': 0.0638449920014123, 'feature_fraction': 0.8249300616969698, 'bagging_fraction': 0.7867951846409844, 'min_child_samples': 55, 'reg_alpha': 0.0007659678554464201, 'reg_lambda': 0.8976674190840221}. Best is trial 41 with value: 5.955594938712023.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[253]\tvalid_0's l2: 2.0877e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:15:40,181] Trial 50 finished with value: 8.905216023191606 and parameters: {'num_leaves': 96, 'learning_rate': 0.04488214590972234, 'feature_fraction': 0.5767805481599357, 'bagging_fraction': 0.7139891136188653, 'min_child_samples': 17, 'reg_alpha': 8.206510323512866, 'reg_lambda': 0.002829484914911879}. Best is trial 41 with value: 5.955594938712023.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[250]\tvalid_0's l2: 2.05357e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:15:42,922] Trial 51 finished with value: 5.912511384178989 and parameters: {'num_leaves': 91, 'learning_rate': 0.07970743105799336, 'feature_fraction': 0.9391565171428817, 'bagging_fraction': 0.8363083475887542, 'min_child_samples': 31, 'reg_alpha': 0.10581974416875342, 'reg_lambda': 0.024849202954837567}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[127]\tvalid_0's l2: 1.68104e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:15:49,771] Trial 52 finished with value: 6.9175897128019495 and parameters: {'num_leaves': 91, 'learning_rate': 0.0802339357989514, 'feature_fraction': 0.9436565421527934, 'bagging_fraction': 0.9084080963006816, 'min_child_samples': 30, 'reg_alpha': 0.16459683466493935, 'reg_lambda': 0.030831256731231015}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[395]\tvalid_0's l2: 9.65139e+06\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:15:54,469] Trial 53 finished with value: 6.392400566022075 and parameters: {'num_leaves': 84, 'learning_rate': 0.05990643504799702, 'feature_fraction': 0.8885171988384651, 'bagging_fraction': 0.8292931301185154, 'min_child_samples': 25, 'reg_alpha': 1.4479882150847507, 'reg_lambda': 0.010695099642620786}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[278]\tvalid_0's l2: 8.76812e+06\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:15:56,537] Trial 54 finished with value: 9.355405491062255 and parameters: {'num_leaves': 97, 'learning_rate': 0.07296111077906582, 'feature_fraction': 0.9327395845099204, 'bagging_fraction': 0.8747242769621746, 'min_child_samples': 94, 'reg_alpha': 0.00025438897636538256, 'reg_lambda': 0.09538364047723881}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[213]\tvalid_0's l2: 2.30595e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:15:57,263] Trial 55 finished with value: 17.1496926783756 and parameters: {'num_leaves': 29, 'learning_rate': 0.10712480862480175, 'feature_fraction': 0.8729404910811669, 'bagging_fraction': 0.7946933691407686, 'min_child_samples': 10, 'reg_alpha': 0.01156669717136843, 'reg_lambda': 0.40350117738553537}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[48]\tvalid_0's l2: 1.16547e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:16:04,080] Trial 56 finished with value: 9.661107388715614 and parameters: {'num_leaves': 92, 'learning_rate': 0.02607882985635861, 'feature_fraction': 0.9143306106001408, 'bagging_fraction': 0.8484568300138278, 'min_child_samples': 84, 'reg_alpha': 0.04430518683814097, 'reg_lambda': 0.0007559258270200758}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[762]\tvalid_0's l2: 2.88257e+07\nTraining until validation scores don't improve for 50 rounds\nEarly stopping, best iteration is:\n[902]\tvalid_0's l2: 1.32081e+07\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:16:17,373] Trial 57 finished with value: 9.874550903374216 and parameters: {'num_leaves': 81, 'learning_rate': 0.11536661810200073, 'feature_fraction': 0.9488183279209995, 'bagging_fraction': 0.7505446160545124, 'min_child_samples': 37, 'reg_alpha': 0.002465028166896337, 'reg_lambda': 0.04525981722369307}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:16:21,187] Trial 58 finished with value: 8.51408695473472 and parameters: {'num_leaves': 97, 'learning_rate': 0.04960452849481707, 'feature_fraction': 0.5094217181289838, 'bagging_fraction': 0.8233474712461546, 'min_child_samples': 30, 'reg_alpha': 0.6197499169076938, 'reg_lambda': 0.010797169420349454}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[295]\tvalid_0's l2: 1.3677e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:16:23,926] Trial 59 finished with value: 7.789918496382377 and parameters: {'num_leaves': 85, 'learning_rate': 0.08471995636756931, 'feature_fraction': 0.7820888695097401, 'bagging_fraction': 0.9599068252330929, 'min_child_samples': 19, 'reg_alpha': 0.12087541526724266, 'reg_lambda': 3.7559815532855234e-06}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[147]\tvalid_0's l2: 2.04371e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:16:30,781] Trial 60 finished with value: 8.358767104275955 and parameters: {'num_leaves': 100, 'learning_rate': 0.03871323080416991, 'feature_fraction': 0.8464660141410515, 'bagging_fraction': 0.7958279443555224, 'min_child_samples': 46, 'reg_alpha': 2.5324078107394962e-05, 'reg_lambda': 0.019543263467273423}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[506]\tvalid_0's l2: 1.3587e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:16:35,705] Trial 61 finished with value: 6.163706036183368 and parameters: {'num_leaves': 89, 'learning_rate': 0.05795869864732089, 'feature_fraction': 0.8699416087181039, 'bagging_fraction': 0.8314175889456141, 'min_child_samples': 25, 'reg_alpha': 0.6156504806944266, 'reg_lambda': 0.008512896232214242}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[285]\tvalid_0's l2: 8.50686e+06\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:16:38,563] Trial 62 finished with value: 7.9313211437590025 and parameters: {'num_leaves': 78, 'learning_rate': 0.07178307210077466, 'feature_fraction': 0.9035490705203062, 'bagging_fraction': 0.8775115767174434, 'min_child_samples': 21, 'reg_alpha': 1.2900132196848169, 'reg_lambda': 0.1147528733222134}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[162]\tvalid_0's l2: 9.34453e+06\nTraining until validation scores don't improve for 50 rounds\nEarly stopping, best iteration is:\n[837]\tvalid_0's l2: 9.05701e+06\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:16:51,510] Trial 63 finished with value: 8.425563389743578 and parameters: {'num_leaves': 90, 'learning_rate': 0.054015518386460626, 'feature_fraction': 0.870499440475882, 'bagging_fraction': 0.8511569815900067, 'min_child_samples': 32, 'reg_alpha': 0.4122430787221999, 'reg_lambda': 0.002116736987916504}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:16:53,754] Trial 64 finished with value: 8.220911535642044 and parameters: {'num_leaves': 88, 'learning_rate': 0.09120543349497155, 'feature_fraction': 0.8079415528213053, 'bagging_fraction': 0.8410676483472995, 'min_child_samples': 17, 'reg_alpha': 0.06842218935822793, 'reg_lambda': 0.246447101887197}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[87]\tvalid_0's l2: 2.01356e+07\nTraining until validation scores don't improve for 50 rounds\nDid not meet early stopping. Best iteration is:\n[1000]\tvalid_0's l2: 1.11265e+07\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:17:09,000] Trial 65 finished with value: 6.012920022742912 and parameters: {'num_leaves': 94, 'learning_rate': 0.010173221451644968, 'feature_fraction': 0.9278443379418458, 'bagging_fraction': 0.9200817045938509, 'min_child_samples': 23, 'reg_alpha': 0.008373807471664907, 'reg_lambda': 0.045655752001811}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:17:20,056] Trial 66 finished with value: 6.668167720574631 and parameters: {'num_leaves': 94, 'learning_rate': 0.013017568066774655, 'feature_fraction': 0.9762536309918282, 'bagging_fraction': 0.9158115576344037, 'min_child_samples': 5, 'reg_alpha': 0.007320103104462514, 'reg_lambda': 0.04064986308949058}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[523]\tvalid_0's l2: 6.59778e+06\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:17:29,345] Trial 67 finished with value: 7.1652959148748945 and parameters: {'num_leaves': 98, 'learning_rate': 0.028295750442498227, 'feature_fraction': 0.9419945974994687, 'bagging_fraction': 0.5787883181923753, 'min_child_samples': 23, 'reg_alpha': 0.021551041942681697, 'reg_lambda': 2.5635642444}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[551]\tvalid_0's l2: 1.03847e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:17:32,917] Trial 68 finished with value: 31.667648356084843 and parameters: {'num_leaves': 90, 'learning_rate': 0.022333535901333787, 'feature_fraction': 0.9551463144754173, 'bagging_fraction': 0.8066974867011325, 'min_child_samples': 13, 'reg_alpha': 0.0032138983014107494, 'reg_lambda': 0.7335018231339792}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[174]\tvalid_0's l2: 2.71e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:17:35,235] Trial 69 finished with value: 9.449171283892891 and parameters: {'num_leaves': 93, 'learning_rate': 0.16561431489770154, 'feature_fraction': 0.7098601339994122, 'bagging_fraction': 0.8676762077829827, 'min_child_samples': 27, 'reg_alpha': 0.001067514103368675, 'reg_lambda': 0.2714457891373601}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[115]\tvalid_0's l2: 1.15985e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:17:39,039] Trial 70 finished with value: 6.7577019574468045 and parameters: {'num_leaves': 87, 'learning_rate': 0.06387294150299772, 'feature_fraction': 0.931624008083323, 'bagging_fraction': 0.8270336190283413, 'min_child_samples': 21, 'reg_alpha': 3.9191155616387894, 'reg_lambda': 0.006707641502449155}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[205]\tvalid_0's l2: 9.21684e+06\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:17:44,074] Trial 71 finished with value: 6.052131363524517 and parameters: {'num_leaves': 82, 'learning_rate': 0.039735954397386156, 'feature_fraction': 0.9002407505836908, 'bagging_fraction': 0.8913459605447297, 'min_child_samples': 28, 'reg_alpha': 0.000495208397535922, 'reg_lambda': 0.018503201060050694}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[307]\tvalid_0's l2: 1.00011e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:17:48,833] Trial 72 finished with value: 6.146983403284124 and parameters: {'num_leaves': 95, 'learning_rate': 0.04772142241420409, 'feature_fraction': 0.878873286935413, 'bagging_fraction': 0.9177643275558673, 'min_child_samples': 25, 'reg_alpha': 0.00045051164370173683, 'reg_lambda': 0.07237433841060603}. Best is trial 51 with value: 5.912511384178989.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[268]\tvalid_0's l2: 9.72806e+06\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:17:55,009] Trial 73 finished with value: 5.593792247811282 and parameters: {'num_leaves': 98, 'learning_rate': 0.04263173792855012, 'feature_fraction': 0.9007384956026986, 'bagging_fraction': 0.9620045905210506, 'min_child_samples': 29, 'reg_alpha': 0.0004246752970105468, 'reg_lambda': 0.08412357029028297}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[345]\tvalid_0's l2: 1.50602e+07\nTraining until validation scores don't improve for 50 rounds\nDid not meet early stopping. Best iteration is:\n[1000]\tvalid_0's l2: 1.22809e+07\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:18:09,683] Trial 74 finished with value: 7.675791684071948 and parameters: {'num_leaves': 98, 'learning_rate': 0.03930457261254122, 'feature_fraction': 0.8450218210799895, 'bagging_fraction': 0.9982509215446604, 'min_child_samples': 35, 'reg_alpha': 0.00011101232115806374, 'reg_lambda': 0.05641272575833209}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:18:16,609] Trial 75 finished with value: 6.281932648832404 and parameters: {'num_leaves': 82, 'learning_rate': 0.04724038334540551, 'feature_fraction': 0.8882253619149552, 'bagging_fraction': 0.9690953301746762, 'min_child_samples': 30, 'reg_alpha': 0.00048286003265405946, 'reg_lambda': 0.14302410148794525}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[471]\tvalid_0's l2: 9.96989e+06\nTraining until validation scores don't improve for 50 rounds\nDid not meet early stopping. Best iteration is:\n[998]\tvalid_0's l2: 1.14522e+07\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:18:26,806] Trial 76 finished with value: 8.646219184150121 and parameters: {'num_leaves': 61, 'learning_rate': 0.018428237465415834, 'feature_fraction': 0.8749033087142669, 'bagging_fraction': 0.9453460261144974, 'min_child_samples': 39, 'reg_alpha': 0.0002919941863813011, 'reg_lambda': 0.4618339080560153}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:18:34,581] Trial 77 finished with value: 6.28806777345076 and parameters: {'num_leaves': 88, 'learning_rate': 0.03421645198912583, 'feature_fraction': 0.9002761503272984, 'bagging_fraction': 0.9165199496575298, 'min_child_samples': 19, 'reg_alpha': 0.00013652635570041702, 'reg_lambda': 0.0030633620798668306}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[483]\tvalid_0's l2: 1.92476e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:18:37,911] Trial 78 finished with value: 6.761988975704873 and parameters: {'num_leaves': 100, 'learning_rate': 0.05405903864249616, 'feature_fraction': 0.8179182826281374, 'bagging_fraction': 0.9466857846919684, 'min_child_samples': 15, 'reg_alpha': 0.0017290628022663887, 'reg_lambda': 0.03636422813469666}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[164]\tvalid_0's l2: 2.02877e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:18:44,722] Trial 79 finished with value: 6.002292353515841 and parameters: {'num_leaves': 96, 'learning_rate': 0.02555140803559136, 'feature_fraction': 0.8593220991615297, 'bagging_fraction': 0.9825833570310862, 'min_child_samples': 28, 'reg_alpha': 0.0006063693772445737, 'reg_lambda': 0.023197154298986677}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[412]\tvalid_0's l2: 1.02261e+07\nTraining until validation scores don't improve for 50 rounds\nEarly stopping, best iteration is:\n[839]\tvalid_0's l2: 1.38718e+07\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:18:55,916] Trial 80 finished with value: 7.547214494812896 and parameters: {'num_leaves': 97, 'learning_rate': 0.02118397399961802, 'feature_fraction': 0.8467208795235999, 'bagging_fraction': 0.9843762278605586, 'min_child_samples': 44, 'reg_alpha': 0.0005843282095436941, 'reg_lambda': 0.023268983200940053}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:18:59,919] Trial 81 finished with value: 5.743034979783391 and parameters: {'num_leaves': 95, 'learning_rate': 0.043993728027807204, 'feature_fraction': 0.8624682288053206, 'bagging_fraction': 0.9689945574076891, 'min_child_samples': 29, 'reg_alpha': 0.007762261018604423, 'reg_lambda': 0.007691872529411601}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[226]\tvalid_0's l2: 1.61283e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:19:06,517] Trial 82 finished with value: 5.639778113552108 and parameters: {'num_leaves': 95, 'learning_rate': 0.0407325220713212, 'feature_fraction': 0.884846386619305, 'bagging_fraction': 0.974303935367711, 'min_child_samples': 28, 'reg_alpha': 0.008851515966755284, 'reg_lambda': 0.07175560534572359}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[392]\tvalid_0's l2: 9.92167e+06\nTraining until validation scores don't improve for 50 rounds\nDid not meet early stopping. Best iteration is:\n[986]\tvalid_0's l2: 1.09368e+07\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:19:22,350] Trial 83 finished with value: 5.989998217027543 and parameters: {'num_leaves': 93, 'learning_rate': 0.011574886134715396, 'feature_fraction': 0.9118459967802396, 'bagging_fraction': 0.9747474995577032, 'min_child_samples': 28, 'reg_alpha': 0.007308237130032493, 'reg_lambda': 0.0175841115724258}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\nDid not meet early stopping. Best iteration is:\n[989]\tvalid_0's l2: 1.439e+07\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:19:36,934] Trial 84 finished with value: 6.295909843664403 and parameters: {'num_leaves': 92, 'learning_rate': 0.025945348181173108, 'feature_fraction': 0.9092738365766421, 'bagging_fraction': 0.9710110605192703, 'min_child_samples': 31, 'reg_alpha': 0.005572197635105041, 'reg_lambda': 0.14805285790222916}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\nDid not meet early stopping. Best iteration is:\n[991]\tvalid_0's l2: 2.04121e+07\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:19:49,076] Trial 85 finished with value: 7.948756563433459 and parameters: {'num_leaves': 98, 'learning_rate': 0.012480355325260737, 'feature_fraction': 0.7686808914260588, 'bagging_fraction': 0.9831402094972415, 'min_child_samples': 35, 'reg_alpha': 0.011089493449229071, 'reg_lambda': 1.281037339266999}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\nDid not meet early stopping. Best iteration is:\n[999]\tvalid_0's l2: 9.91353e+06\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:19:58,958] Trial 86 finished with value: 7.9851094329839984 and parameters: {'num_leaves': 58, 'learning_rate': 0.010659198087001949, 'feature_fraction': 0.8067289730883739, 'bagging_fraction': 0.9564735299480609, 'min_child_samples': 22, 'reg_alpha': 0.016660753162964018, 'reg_lambda': 0.004512068833194605}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:20:05,618] Trial 87 finished with value: 5.910087817220411 and parameters: {'num_leaves': 94, 'learning_rate': 0.027614856279359105, 'feature_fraction': 0.9211004787710677, 'bagging_fraction': 0.993200227508703, 'min_child_samples': 28, 'reg_alpha': 0.04283977330016682, 'reg_lambda': 0.241373154256912}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[394]\tvalid_0's l2: 1.01407e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:20:11,112] Trial 88 finished with value: 7.727404139475369 and parameters: {'num_leaves': 96, 'learning_rate': 0.03444653859010883, 'feature_fraction': 0.8595243862881605, 'bagging_fraction': 0.9716478150534937, 'min_child_samples': 32, 'reg_alpha': 0.059091051423725706, 'reg_lambda': 5.1367735935933245}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[381]\tvalid_0's l2: 1.4172e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:20:16,570] Trial 89 finished with value: 7.1886294005334666 and parameters: {'num_leaves': 91, 'learning_rate': 0.029767673170445354, 'feature_fraction': 0.6415101959102092, 'bagging_fraction': 0.9991758250811842, 'min_child_samples': 29, 'reg_alpha': 0.0040300220835241705, 'reg_lambda': 0.3356650550406037}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[419]\tvalid_0's l2: 1.4002e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:20:18,250] Trial 90 finished with value: 13.708195439567577 and parameters: {'num_leaves': 39, 'learning_rate': 0.23404026180541387, 'feature_fraction': 0.8911482161319547, 'bagging_fraction': 0.9350179388911164, 'min_child_samples': 40, 'reg_alpha': 0.03749898665529778, 'reg_lambda': 0.190880513912431}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[170]\tvalid_0's l2: 1.27543e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:20:24,201] Trial 91 finished with value: 6.138925374355724 and parameters: {'num_leaves': 93, 'learning_rate': 0.042576111830582006, 'feature_fraction': 0.9217997052181983, 'bagging_fraction': 0.9893325114842547, 'min_child_samples': 20, 'reg_alpha': 0.1006713812036707, 'reg_lambda': 0.09163747213739369}. Best is trial 73 with value: 5.593792247811282.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[335]\tvalid_0's l2: 8.0208e+06\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:20:33,069] Trial 92 finished with value: 5.500369451524058 and parameters: {'num_leaves': 94, 'learning_rate': 0.02145802586444006, 'feature_fraction': 0.9355115476246086, 'bagging_fraction': 0.951873277988187, 'min_child_samples': 28, 'reg_alpha': 0.006968505802495722, 'reg_lambda': 0.032742492683394554}. Best is trial 92 with value: 5.500369451524058.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[544]\tvalid_0's l2: 1.06455e+07\nTraining until validation scores don't improve for 50 rounds\nEarly stopping, best iteration is:\n[625]\tvalid_0's l2: 1.06674e+07\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:20:43,652] Trial 93 finished with value: 5.850910571254985 and parameters: {'num_leaves': 99, 'learning_rate': 0.01798963269708366, 'feature_fraction': 0.9616388152316437, 'bagging_fraction': 0.9543729589536284, 'min_child_samples': 28, 'reg_alpha': 0.0017517254883862429, 'reg_lambda': 0.029567921945491668}. Best is trial 92 with value: 5.500369451524058.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\nDid not meet early stopping. Best iteration is:\n[995]\tvalid_0's l2: 1.65835e+07\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:20:59,202] Trial 94 finished with value: 6.608518998825301 and parameters: {'num_leaves': 99, 'learning_rate': 0.019725034425476504, 'feature_fraction': 0.9568280126636314, 'bagging_fraction': 0.9575453601387799, 'min_child_samples': 37, 'reg_alpha': 0.016326362082680186, 'reg_lambda': 0.014584863593761772}. Best is trial 92 with value: 5.500369451524058.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:21:02,822] Trial 95 finished with value: 12.622274308527864 and parameters: {'num_leaves': 98, 'learning_rate': 0.294827544458119, 'feature_fraction': 0.9831855160638892, 'bagging_fraction': 0.9724333270742229, 'min_child_samples': 32, 'reg_alpha': 0.002032703441639305, 'reg_lambda': 0.6340023983815167}. Best is trial 92 with value: 5.500369451524058.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[164]\tvalid_0's l2: 1.52977e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:21:07,140] Trial 96 finished with value: 8.254620543872774 and parameters: {'num_leaves': 100, 'learning_rate': 0.03737319695644307, 'feature_fraction': 0.9432001242896979, 'bagging_fraction': 0.9510913464495674, 'min_child_samples': 61, 'reg_alpha': 0.004973742540444051, 'reg_lambda': 0.029363433105878453}. Best is trial 92 with value: 5.500369451524058.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[347]\tvalid_0's l2: 1.64394e+07\nTraining until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:21:12,722] Trial 97 finished with value: 6.091998360393364 and parameters: {'num_leaves': 86, 'learning_rate': 0.05040201483098835, 'feature_fraction': 0.9158821694009807, 'bagging_fraction': 0.967580391407225, 'min_child_samples': 28, 'reg_alpha': 0.03116724783470773, 'reg_lambda': 0.007569398419558922}. Best is trial 92 with value: 5.500369451524058.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[344]\tvalid_0's l2: 9.90373e+06\nTraining until validation scores don't improve for 50 rounds\nEarly stopping, best iteration is:\n[680]\tvalid_0's l2: 1.16842e+07\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:21:24,362] Trial 98 finished with value: 5.922497870492081 and parameters: {'num_leaves': 95, 'learning_rate': 0.018409050285491495, 'feature_fraction': 0.9528095521237114, 'bagging_fraction': 0.9368101252424692, 'min_child_samples': 26, 'reg_alpha': 0.001598729237754012, 'reg_lambda': 0.06652808665123952}. Best is trial 92 with value: 5.500369451524058.\n","output_type":"stream"},{"name":"stdout","text":"Training until validation scores don't improve for 50 rounds\n","output_type":"stream"},{"name":"stderr","text":"[I 2025-10-08 12:21:27,684] Trial 99 finished with value: 12.067618914373279 and parameters: {'num_leaves': 20, 'learning_rate': 0.030610797370336226, 'feature_fraction': 0.9613200478935484, 'bagging_fraction': 0.928430159537158, 'min_child_samples': 75, 'reg_alpha': 0.0029659606108391806, 'reg_lambda': 0.07711597268830754}. Best is trial 92 with value: 5.500369451524058.\n","output_type":"stream"},{"name":"stdout","text":"Early stopping, best iteration is:\n[611]\tvalid_0's l2: 2.13669e+07\nBest MAPE: 5.5004\nBest params: {'num_leaves': 94, 'learning_rate': 0.02145802586444006, 'feature_fraction': 0.9355115476246086, 'bagging_fraction': 0.951873277988187, 'min_child_samples': 28, 'reg_alpha': 0.006968505802495722, 'reg_lambda': 0.032742492683394554}\n\n================================================================================\n✅ PIPELINE EXECUTION COMPLETE!\n================================================================================\n\nAll outputs generated successfully:\n  → submission.csv (ready for Kaggle submission)\n  → eda_overview.png\n  → model_predictions.png\n  → feature_importance.png\n\nFinal Model: Weighted Ensemble\nValidation MAPE: 15.9186%\n\nThank you for using this ML pipeline!\nFor questions or improvements, refer to the documentation above.\n\n","output_type":"stream"}],"execution_count":40},{"cell_type":"code","source":"summit = pd.read_csv('/kaggle/working/submission.csv')\nsummit.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-08T12:23:36.839097Z","iopub.execute_input":"2025-10-08T12:23:36.839766Z","iopub.status.idle":"2025-10-08T12:23:36.863223Z","shell.execute_reply.started":"2025-10-08T12:23:36.839737Z","shell.execute_reply":"2025-10-08T12:23:36.862262Z"}},"outputs":[{"execution_count":44,"output_type":"execute_result","data":{"text/plain":"                  id  new_house_transaction_amount\n0  2024 Aug_sector 1                  12962.646107\n1  2024 Aug_sector 2                  12962.644563\n2  2024 Aug_sector 3                  12962.578067\n3  2024 Aug_sector 4                  12958.887335\n4  2024 Aug_sector 5                  12959.576031","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>new_house_transaction_amount</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2024 Aug_sector 1</td>\n      <td>12962.646107</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2024 Aug_sector 2</td>\n      <td>12962.644563</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2024 Aug_sector 3</td>\n      <td>12962.578067</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2024 Aug_sector 4</td>\n      <td>12958.887335</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2024 Aug_sector 5</td>\n      <td>12959.576031</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":44},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}